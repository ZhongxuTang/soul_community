/*
 Navicat Premium Data Transfer

 Source Server         : 本地连接
 Source Server Type    : MySQL
 Source Server Version : 80016
 Source Host           : localhost:3306
 Source Schema         : soul

 Target Server Type    : MySQL
 Target Server Version : 80016
 File Encoding         : 65001

 Date: 22/05/2020 22:19:53
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for admin
-- ----------------------------
DROP TABLE IF EXISTS `admin`;
CREATE TABLE `admin`  (
  `admin_id` int(11) NOT NULL AUTO_INCREMENT,
  `admin_username` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `admin_password` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `admin_nickname` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`admin_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of admin
-- ----------------------------
INSERT INTO `admin` VALUES (1, '2294642544@qq.com', '96cf058bc81ebb3b5da56b7fd9aaed82', 'Jay Chou');

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article`  (
  `article_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '文章id',
  `article_name` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '文章名称',
  `article_create_time` datetime(0) NULL DEFAULT NULL COMMENT '文章创建时间',
  `user_id` int(11) NOT NULL COMMENT '所属用户的id',
  `article_type_id` int(11) NOT NULL COMMENT '资源类型id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '文章内容',
  `content_md` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '文章内容，以md形式保存',
  `summary` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '文章简介',
  `state` int(11) NULL DEFAULT NULL COMMENT '文章状态，1为未审核，2为审核通过，3为草稿，4为审核未通过',
  `reason` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '审核未通过原因',
  `check_date` datetime(0) NULL DEFAULT NULL COMMENT '审核时间',
  `read_quantity` int(10) NULL DEFAULT NULL COMMENT '阅读量',
  `user_comment_quantity` int(11) NULL DEFAULT 0 COMMENT '用户评论量',
  PRIMARY KEY (`article_id`) USING BTREE,
  INDEX `fk_articletype_article`(`article_type_id`) USING BTREE,
  INDEX `fk_article_user`(`user_id`) USING BTREE,
  CONSTRAINT `fk_article_user` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT `fk_articletype_article` FOREIGN KEY (`article_type_id`) REFERENCES `article_type` (`article_type_id`) ON DELETE CASCADE ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 32 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '文章表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES (18, '你努力工作会让老板感动吗？', '2020-05-06 16:15:07', 1, 4, '<p><code>二哥，你好呀，我想咨询你一个问题，困扰我很久了。我刚参加工作，每天早出晚归的，但我不明白为什么老板一直对我不感冒，仿佛看不到我的努力似的，是他有问题还是我有问题呢？</code><br>以上是读者小卢最近私信我的问题。其实这个问题蛮好回答的，努力工作，尤其是通过加班这种努力完全无法让老板感动。</p>\n<p>为什么呢？因为当下的环境下大家都在加班啊，你可能比别人早到一会或者晚到一会，但这对老板来说，无所谓。假如说公司只有你一个人加班，那我敢肯定，老板会对你一见倾心的。<br><code>我在美国时，在和 IBM、CISCO 等几个大公司领导讨论问题时谈到，IT 是什么？他们说，IT 就是才员、才员、再才元（请原谅我故意写错几个错别字，因为这词敏感）。以电子流来替代人工的操作，以降低运作成本，增强企业竞争力。</code></p>\n<p>上面这段话你听完是不是感觉心里拔凉拔凉的？当然，这句话不是我说的，而是菊厂老大说的。</p>\n<p>菊厂不知道是什么的话，建议问搜索引擎。总之，老板看待员工的眼光是冷酷的：在电子流没有替代人工之前，他所能做到的就是，让员工变成工具人。</p>\n<p>之前在苏州一家日企的时候，跳槽过来一位同事，我回洛阳后还曾一起做过私活。他是从菊厂过去的，说那里加班非常严重，他扛不住了，所以才到日企工作的，因为他觉得这里相对轻松一点。</p>\n<p>我在的这家日企总体给我印象还是非常不错的，项目工期紧张的时候确实加班挺厉害的；但如果不那么紧张的时候，基本上大家都是准时下班，几乎没有人主动加班的。</p>\n<p>当然了，绩效的评分和加班时长是有挂钩的，但更多的评分权力掌握在上级领导那里，我所经历的领导都是蛮可观的，如果你能够解决掉疑难杂症，基本上评分都不会差——除非你搞过一些严重的 bug。</p>\n<p>可一旦遇到提倡加班、拼命的老板，那就另说了。因为大家看起来都是很努力的样子，做不完的需求，改不完的 bug，加不完的班，那么你的努力在老板的眼里，就会显得显的一文不值了。</p>\n<p>就好像，小时候，生活质量差，你觉得吃一点好东西就觉得是在吃山珍海味。比如说我小时候最喜欢的就是火腿肠、奶粉、葡萄干，现在生活质量提高了，买买买，永远也买不回来小时候吃的那种味道了。</p>\n<p>我一直怀疑，是不是现在的食品做工有问题；但其实不是的，是我的胃随着生活品质的提升，变得越来越挑剔了。</p>\n<p>老板也是一样，一开始没人加班，遇到一两个拼命加班的，他一定觉得这就是他要寻找的人才。于是，升职加薪。然后，别的员工因此主动（被动）地也加了班，老板这时候就傻眼了，究竟该为谁感动呢？</p>\n<p>一定是那些既能拼（狼性）又能干事（修福报）的人。</p>\n<p>以前，只需要提高单位时间里的工作效率就行了，可现在完全不同了，那些定点上下班的员工几乎就是另类（闲鱼），哪怕你工作已经完成了。</p>\n<p>前天我经过小区门口的时候，还听见领班的师傅在那愤愤不平，他说，“我给你说啊，老黄，那他花一个小时讲的那些东西，我不用五分钟，就能讲明明白白。”</p>\n<p>从他那句话当中，我就能听得出来，领导办事效率低啊，搞得他做下属的，硬生生多站了 55 分钟！想着师傅的那些话，想着师傅站在那里左耳朵进右耳朵出的画面，我就觉得挺难过的。</p>\n<p>我认识一个朋友，他们公司流行的制度你猜怎么着，没有加班工资。但如果你加班多的话，那么绩效奖就会多。</p>\n<p>这种制度下，你努力工作会让老板感动吗？</p>\n<p>来，换一个角度来看待一下这个问题。我，在目前的公司，几乎从不加班，反而经常迟到早退，我给老板说得很明白，我讨厌加班，有事我干事，没事我就忙别的，比如读书写作啥的。</p>\n<p>由于老板付给我的工资不高，所以他就没有强制要求我加班的勇气。</p>\n<p>有人说，这样依赖员工的公司一定不成气候。我只能说，这样想的人真的是得了妄想症。</p>\n<p>你生下来，就从来不是为一个公司活着的，除非你是老板；你是为自己活着的，工作只是你谋生的一种方法。划重点了，一种。</p>\n<p>把该完成的工作完成，然后就滚回家好好地生活。不要把工作当成是生活的全部，除非你不需要生活。</p>\n<p>之前说过，很多人以为我是在全职写作，这个真不是的。我是在把工作收拾妥当后才开始写作的，否则，真饿死了。我写作不为别的，就是为了增加除了工作之外的生存能力。</p>\n<p>在老板眼里，我从来都不是一个努力工作的好员工，我也不会这么做。因为要让老板需要你，你不仅工作要干的漂亮，还得有些其他方面的优秀品质。</p>\n<p>否则，一旦公司来一个和你同等价位的员工，能力和你差不多，甚至还比你强，那么你的地位就尴尬了。</p>\n<h5 id=\"h5--\"><a name=\"不要试图去感动老板，你应该做的，是让自己变得更强，而不是更努力。\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>不要试图去感动老板，你应该做的，是让自己变得更强，而不是更努力。</h5><p>如果觉得文章对你有点帮助，请微信搜索「 沉默王二 」第一时间阅读。本回答已收录 GitHub，传送门~ ，里面更有大厂面试完整考点，欢迎 Star。</p>\n<p>我是沉默王二，一枚有颜值却靠才华苟且的程序员。关注即可提升学习效率，别忘了三连啊，点赞、收藏、留言，我不挑，嘻嘻。<br>————————————————<br>版权声明：本文为CSDN博主「沉默王二」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/qing_gee/article/details/105898825\">https://blog.csdn.net/qing_gee/article/details/105898825</a></p>\n', '`二哥，你好呀，我想咨询你一个问题，困扰我很久了。我刚参加工作，每天早出晚归的，但我不明白为什么老板一直对我不感冒，仿佛看不到我的努力似的，是他有问题还是我有问题呢？`\n以上是读者小卢最近私信我的问题。其实这个问题蛮好回答的，努力工作，尤其是通过加班这种努力完全无法让老板感动。\n\n为什么呢？因为当下的环境下大家都在加班啊，你可能比别人早到一会或者晚到一会，但这对老板来说，无所谓。假如说公司只有你一个人加班，那我敢肯定，老板会对你一见倾心的。\n`我在美国时，在和 IBM、CISCO 等几个大公司领导讨论问题时谈到，IT 是什么？他们说，IT 就是才员、才员、再才元（请原谅我故意写错几个错别字，因为这词敏感）。以电子流来替代人工的操作，以降低运作成本，增强企业竞争力。`\n\n上面这段话你听完是不是感觉心里拔凉拔凉的？当然，这句话不是我说的，而是菊厂老大说的。\n\n菊厂不知道是什么的话，建议问搜索引擎。总之，老板看待员工的眼光是冷酷的：在电子流没有替代人工之前，他所能做到的就是，让员工变成工具人。\n\n之前在苏州一家日企的时候，跳槽过来一位同事，我回洛阳后还曾一起做过私活。他是从菊厂过去的，说那里加班非常严重，他扛不住了，所以才到日企工作的，因为他觉得这里相对轻松一点。\n\n我在的这家日企总体给我印象还是非常不错的，项目工期紧张的时候确实加班挺厉害的；但如果不那么紧张的时候，基本上大家都是准时下班，几乎没有人主动加班的。\n\n当然了，绩效的评分和加班时长是有挂钩的，但更多的评分权力掌握在上级领导那里，我所经历的领导都是蛮可观的，如果你能够解决掉疑难杂症，基本上评分都不会差——除非你搞过一些严重的 bug。\n\n可一旦遇到提倡加班、拼命的老板，那就另说了。因为大家看起来都是很努力的样子，做不完的需求，改不完的 bug，加不完的班，那么你的努力在老板的眼里，就会显得显的一文不值了。\n\n就好像，小时候，生活质量差，你觉得吃一点好东西就觉得是在吃山珍海味。比如说我小时候最喜欢的就是火腿肠、奶粉、葡萄干，现在生活质量提高了，买买买，永远也买不回来小时候吃的那种味道了。\n\n我一直怀疑，是不是现在的食品做工有问题；但其实不是的，是我的胃随着生活品质的提升，变得越来越挑剔了。\n\n老板也是一样，一开始没人加班，遇到一两个拼命加班的，他一定觉得这就是他要寻找的人才。于是，升职加薪。然后，别的员工因此主动（被动）地也加了班，老板这时候就傻眼了，究竟该为谁感动呢？\n\n一定是那些既能拼（狼性）又能干事（修福报）的人。\n\n以前，只需要提高单位时间里的工作效率就行了，可现在完全不同了，那些定点上下班的员工几乎就是另类（闲鱼），哪怕你工作已经完成了。\n\n前天我经过小区门口的时候，还听见领班的师傅在那愤愤不平，他说，“我给你说啊，老黄，那他花一个小时讲的那些东西，我不用五分钟，就能讲明明白白。”\n\n从他那句话当中，我就能听得出来，领导办事效率低啊，搞得他做下属的，硬生生多站了 55 分钟！想着师傅的那些话，想着师傅站在那里左耳朵进右耳朵出的画面，我就觉得挺难过的。\n\n我认识一个朋友，他们公司流行的制度你猜怎么着，没有加班工资。但如果你加班多的话，那么绩效奖就会多。\n\n这种制度下，你努力工作会让老板感动吗？\n\n来，换一个角度来看待一下这个问题。我，在目前的公司，几乎从不加班，反而经常迟到早退，我给老板说得很明白，我讨厌加班，有事我干事，没事我就忙别的，比如读书写作啥的。\n\n由于老板付给我的工资不高，所以他就没有强制要求我加班的勇气。\n\n有人说，这样依赖员工的公司一定不成气候。我只能说，这样想的人真的是得了妄想症。\n\n你生下来，就从来不是为一个公司活着的，除非你是老板；你是为自己活着的，工作只是你谋生的一种方法。划重点了，一种。\n\n把该完成的工作完成，然后就滚回家好好地生活。不要把工作当成是生活的全部，除非你不需要生活。\n\n之前说过，很多人以为我是在全职写作，这个真不是的。我是在把工作收拾妥当后才开始写作的，否则，真饿死了。我写作不为别的，就是为了增加除了工作之外的生存能力。\n\n在老板眼里，我从来都不是一个努力工作的好员工，我也不会这么做。因为要让老板需要你，你不仅工作要干的漂亮，还得有些其他方面的优秀品质。\n\n否则，一旦公司来一个和你同等价位的员工，能力和你差不多，甚至还比你强，那么你的地位就尴尬了。\n\n#####不要试图去感动老板，你应该做的，是让自己变得更强，而不是更努力。\n\n如果觉得文章对你有点帮助，请微信搜索「 沉默王二 」第一时间阅读。本回答已收录 GitHub，传送门~ ，里面更有大厂面试完整考点，欢迎 Star。\n\n我是沉默王二，一枚有颜值却靠才华苟且的程序员。关注即可提升学习效率，别忘了三连啊，点赞、收藏、留言，我不挑，嘻嘻。\n————————————————\n版权声明：本文为CSDN博主「沉默王二」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qing_gee/article/details/105898825', '二哥，你好呀，我想咨询你一个问题，困扰我很久了。我刚参加工作，每天早出晚归的，但我不明白为什么老板一直对我不感冒，仿佛看不到我的努力似的，是他有问题还是我有问题呢？ 以上是读者小卢最近私信我的问题。其', 2, NULL, NULL, 8, 0);
INSERT INTO `article` VALUES (19, '怎么才能够坚持做一件事并且把它做好？', '2020-05-07 16:25:07', 1, 4, '<p>好久没写过碎言碎语的文章了，一直都是更新技术文章，那么今天就换换口味，聊一聊近况和想法。</p>\n<p>自从回北京之后，就一直在家办公，十几平方的卧室内支撑着北漂的身体和灵魂，我相信这不是我一个人的情况，而是无数在异国他乡追求自己理想的人的缩影。</p>\n<p>来北京工作的人无非就两种想法，第一：追求梦想，实现人生价值，可能的话定居北京，成为一个新的北京人，第二：赚钱，满足自己和家庭的生活、物质和一些所谓的虚荣心的需求。这两者均不外乎“钱”。但这里所说的“钱”是不带有任何贬义的，因为“钱”是生存的基础，虽然“钱“不能解决任何问题，但有了“钱”能解决80%没有“钱”解决不了的问题。<br><code>那么你来北京工作的目的是什么呢？或者奔赴远离家乡的城市是为了什么呢？</code><br>于是乎，在人生前行的路上有的人慢慢的脱离了轨道，但是人这一辈子有很多比“钱”更重要的事情要做，比如保持身体健康，比如看看各地的风土人情，比如和三五好友围炉小酌，比如坚持做自己认为对的事情。</p>\n<p>最近不知道是不是因为在家呆的时间太久了，咳嗽的有些严重，两次社区医院+一次三甲医院，总算是把咳嗽治好了，但过敏性鼻炎却还没好，室内面积小，空气不流通，时间久了，当然会引起一些小毛病，或者让老毛病重犯。因此在这里告诫大家，室内一定要多通风，而且要注意锻炼身体，身体是革命的本钱，要不然一切都是空谈，而且《长安十二时辰》里边徐斌不是也说“活着是解决一切问题的办法”，同样，“身体健康才是往后余生的基石”。</p>\n<p>本来幻想着来年春暖花开之时，游历远方呢，可如今也只能在卧室-厨房-卫生间之间来回辗转，五岳我只去了华山，川藏也还躺在我的计划表里，还有安徽的黄山、新疆的沙漠、厦门的鼓浪屿、俄罗斯北部的极光、日本沉睡的富士山… 这些我还没来得及欣赏。所以只有保持身体健康，好好工作，努力赚钱，才能在有生之日去游历这世间的欣欣向荣。<br><code>那么你想在有生之年，去经历什么样的世间风情呢？</code><br>再说一下写作吧，其实我个人挺喜欢写东西的，在上高中的时候，就喜欢写一些自以为的白话诗，上大学的时候自己还构思了一本小说，不过写了开头，却再也没有结尾了。后来念了大学，学了计算机，便开始写一些笔记，知识点，算法之类的，说起来自己的写作习惯是可以追溯到初中的。现在虽说一直在维护自己的公众号，但也是佛系写作，不定时更新，不刻意圈粉，不像一些大号做的风生水起！不过也没关系了，手机上的确不太适合看一些很深很钻的东西，大多数人的阅读口味还是比较偏娱乐、新闻热点、浅显易懂的文章，而我自己更新的内容说实话 有时候我自己都不愿意看，不是说不好，而是在特定的时间点里，这些东西不适合看，因为没办法深入思考。所以也不强求什么了，不过我也不会去更一些复制粘贴、东拼西凑、随手拿来的东西，因为我觉得那不是一个专业的技术人该做的事，而是重运营，重技巧，追热点的写手罢了。<br>好了，回归正题，聊一下题目吧。“你为什么能够坚持做一件事并且把它做好？”。<br>其实这句话里有一个前提和两层表达。<br>前提是：</p>\n<ul>\n<li>已经坚持在做一件事<br>两层表达是：</li><li>为什么能够坚持做一件事</li><li>怎么能够把这件事做好<br>当然这里的前提并不一定是每个人都能做到，但我相信有很多人可以做到。比如我身边的例子，有人坚持跑马拉松，有人坚持健身，有人坚持在做或者参与一个git开源项目，有人坚持写作，有人坚持旅行…，能够坚持做一件事本来就很难，但如果没有坚持做一件事我倒觉得有些悲哀，人世间走一遭，不留下点什么，自己可能也会留下很多遗憾吧。所以如果你现在还没有坚持做一件事，那么我建议你去试一试，说不定你会有意想不到的收获。</li></ul>\n<p>其次说一下两层表达。如果你已经在坚持做一件事了，问一下你自己，为什么坚持？是热爱驱使，还是利益作祟。如何区分呢？就是你通过这件事有没有得到你预期的收益。其实就拿写公众号来讲，我相信很多人的初心都是“无私的知识分享”，但同时很多人走着走着就被利益蒙蔽了双眼，开始收吃瓜群众的智商税了。所以我只提倡那些真正热爱并坚持做下去的事。</p>\n<p>怎么能够把这件事做好？公私分明+满心热爱。为什么说公私分明呢，因为我们在做很多事的时候，很难和工作脱离开来，无形之中就会相互影响，所以要尽量把工作和生活分开，在公司或者忙公司事情的时候，竭尽全力，因为我相信你只要把工作做好，做细，公司也不会亏待你的。其次坚持做一件事的时候，投入自己的真心，用心去做这件事，而不是敷衍了事，形式主义，也不要轻易的受外界影响，被他人左右，被外界迷惑，坚持初心不改，善始善终！</p>\n<p>我相信能让你坚持做好一件事的只有热爱！</p>\n<p>我相信年迈围炉小坐时所讲述自己平生的经历是最美的回忆！</p>\n<p>我也相信那些问心无愧的执着和坚持是留给后人最好的尊严！<br>————————————————<br>版权声明：本文为CSDN博主「Thinkgamer_」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/Gamer_gyt/article/details/104844937\">https://blog.csdn.net/Gamer_gyt/article/details/104844937</a></p>\n', '好久没写过碎言碎语的文章了，一直都是更新技术文章，那么今天就换换口味，聊一聊近况和想法。\n\n自从回北京之后，就一直在家办公，十几平方的卧室内支撑着北漂的身体和灵魂，我相信这不是我一个人的情况，而是无数在异国他乡追求自己理想的人的缩影。\n\n来北京工作的人无非就两种想法，第一：追求梦想，实现人生价值，可能的话定居北京，成为一个新的北京人，第二：赚钱，满足自己和家庭的生活、物质和一些所谓的虚荣心的需求。这两者均不外乎“钱”。但这里所说的“钱”是不带有任何贬义的，因为“钱”是生存的基础，虽然“钱“不能解决任何问题，但有了“钱”能解决80%没有“钱”解决不了的问题。\n`那么你来北京工作的目的是什么呢？或者奔赴远离家乡的城市是为了什么呢？`\n于是乎，在人生前行的路上有的人慢慢的脱离了轨道，但是人这一辈子有很多比“钱”更重要的事情要做，比如保持身体健康，比如看看各地的风土人情，比如和三五好友围炉小酌，比如坚持做自己认为对的事情。\n\n最近不知道是不是因为在家呆的时间太久了，咳嗽的有些严重，两次社区医院+一次三甲医院，总算是把咳嗽治好了，但过敏性鼻炎却还没好，室内面积小，空气不流通，时间久了，当然会引起一些小毛病，或者让老毛病重犯。因此在这里告诫大家，室内一定要多通风，而且要注意锻炼身体，身体是革命的本钱，要不然一切都是空谈，而且《长安十二时辰》里边徐斌不是也说“活着是解决一切问题的办法”，同样，“身体健康才是往后余生的基石”。\n\n本来幻想着来年春暖花开之时，游历远方呢，可如今也只能在卧室-厨房-卫生间之间来回辗转，五岳我只去了华山，川藏也还躺在我的计划表里，还有安徽的黄山、新疆的沙漠、厦门的鼓浪屿、俄罗斯北部的极光、日本沉睡的富士山… 这些我还没来得及欣赏。所以只有保持身体健康，好好工作，努力赚钱，才能在有生之日去游历这世间的欣欣向荣。\n`那么你想在有生之年，去经历什么样的世间风情呢？`\n再说一下写作吧，其实我个人挺喜欢写东西的，在上高中的时候，就喜欢写一些自以为的白话诗，上大学的时候自己还构思了一本小说，不过写了开头，却再也没有结尾了。后来念了大学，学了计算机，便开始写一些笔记，知识点，算法之类的，说起来自己的写作习惯是可以追溯到初中的。现在虽说一直在维护自己的公众号，但也是佛系写作，不定时更新，不刻意圈粉，不像一些大号做的风生水起！不过也没关系了，手机上的确不太适合看一些很深很钻的东西，大多数人的阅读口味还是比较偏娱乐、新闻热点、浅显易懂的文章，而我自己更新的内容说实话 有时候我自己都不愿意看，不是说不好，而是在特定的时间点里，这些东西不适合看，因为没办法深入思考。所以也不强求什么了，不过我也不会去更一些复制粘贴、东拼西凑、随手拿来的东西，因为我觉得那不是一个专业的技术人该做的事，而是重运营，重技巧，追热点的写手罢了。\n好了，回归正题，聊一下题目吧。“你为什么能够坚持做一件事并且把它做好？”。\n其实这句话里有一个前提和两层表达。\n前提是：\n- 已经坚持在做一件事\n两层表达是：\n- 为什么能够坚持做一件事\n- 怎么能够把这件事做好\n当然这里的前提并不一定是每个人都能做到，但我相信有很多人可以做到。比如我身边的例子，有人坚持跑马拉松，有人坚持健身，有人坚持在做或者参与一个git开源项目，有人坚持写作，有人坚持旅行…，能够坚持做一件事本来就很难，但如果没有坚持做一件事我倒觉得有些悲哀，人世间走一遭，不留下点什么，自己可能也会留下很多遗憾吧。所以如果你现在还没有坚持做一件事，那么我建议你去试一试，说不定你会有意想不到的收获。\n\n其次说一下两层表达。如果你已经在坚持做一件事了，问一下你自己，为什么坚持？是热爱驱使，还是利益作祟。如何区分呢？就是你通过这件事有没有得到你预期的收益。其实就拿写公众号来讲，我相信很多人的初心都是“无私的知识分享”，但同时很多人走着走着就被利益蒙蔽了双眼，开始收吃瓜群众的智商税了。所以我只提倡那些真正热爱并坚持做下去的事。\n\n怎么能够把这件事做好？公私分明+满心热爱。为什么说公私分明呢，因为我们在做很多事的时候，很难和工作脱离开来，无形之中就会相互影响，所以要尽量把工作和生活分开，在公司或者忙公司事情的时候，竭尽全力，因为我相信你只要把工作做好，做细，公司也不会亏待你的。其次坚持做一件事的时候，投入自己的真心，用心去做这件事，而不是敷衍了事，形式主义，也不要轻易的受外界影响，被他人左右，被外界迷惑，坚持初心不改，善始善终！\n\n我相信能让你坚持做好一件事的只有热爱！\n\n我相信年迈围炉小坐时所讲述自己平生的经历是最美的回忆！\n\n我也相信那些问心无愧的执着和坚持是留给后人最好的尊严！\n————————————————\n版权声明：本文为CSDN博主「Thinkgamer_」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/Gamer_gyt/article/details/104844937', '好久没写过碎言碎语的文章了，一直都是更新技术文章，那么今天就换换口味，聊一聊近况和想法。 自从回北京之后，就一直在家办公，十几平方的卧室内支撑着北漂的身体和灵魂，我相信这不是我一个人的情况，而是无数在', 2, NULL, NULL, 0, 0);
INSERT INTO `article` VALUES (20, 'C 语言中，x += 5 == 4 是什么意思？', '2020-05-07 16:35:07', 1, 7, '<p><img src=\"http://localhost:4545/img/userArticleImg/1588839552791.jpg\" alt=\"\"></p>\n<h4 id=\"h4--\"><a name=\"讨论这个有意义吗？\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>讨论这个有意义吗？</h4><p>这个是在知乎上看到的一个问题，评论挺多的。其中有人提到，研究这个东西有什么用？编程的时候我们不能这么写的。我记得在大学的时候，我们的副院长给我们上课，就给我们提到，要习惯并且喜欢使用 「（ 」和 「）」，这两个符号。</p>\n<p>所以上面的表达式，如果想表达清楚自己的意图，可以这样写<br><code>((x += 5) == 4)</code><br>或者是<br><code>(x += （5 == 4)）</code></p>\n<h4 id=\"h4--\"><a name=\"但是有些程序员为什么喜欢这样写呢？\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>但是有些程序员为什么喜欢这样写呢？</h4><p>我们可以肯定，写出这样代码的人，一定对运算符优先级背得滚瓜烂熟了。如果作为一个程序员，他认为对运算符要了如指掌，他觉得别人对这个代码肯定一眼就能看懂，他写出这样的代码也是没有问题的。</p>\n<h5 id=\"h5--\"><a name=\"我们学这样的代码有什么用？\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>我们学这样的代码有什么用？</h5><p>学习这样并不表示我们要写出这样的代码，而是，我们如果在工作学习中，遇到这样的代码，我们就一眼能看出来这个代码的作用。</p>\n<p>C语言的标准有几百页，大部分人不会仔细研究每个细节，有些工程师觉得某些东西没有用，大概率是因为他在自己的工作中没有用到。有的程序员喜欢研究或者在工作中需要使用这样的方法，这就是这种代码存在的其中一个原因吧。</p>\n<h2 id=\"h2-u8868u8FBEu5F0Fu548Cu8FD0u7B97u7B26u4F18u5148u7EA7\"><a name=\"表达式和运算符优先级\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>表达式和运算符优先级</h2><p>C语言在一个表达式中，如果遇到几个运算符，要考虑优先级和结合方向。</p>\n<p>比如，表达式 x pri1 y pri2 z，可能出现两种可能性</p>\n<ul>\n<li>(x pri1 y )pri2 z</li><li>x pri1 (y pri2 z)<br>如果运算符 pri1 的优先级比pri2 高，那么就是上面的第一种情况。</li></ul>\n<p>如果运算符 pri1 的优先级比pri2 低，那么就是上面的第二种情况。</p>\n<p>如果优先级相同，那就要考虑结合方向。</p>\n<p>结合方向是 「左到右」或者「右到左」。</p>\n<p>例如，「= 」 的结合方向是 「右到左」。</p>\n<p>所以</p>\n<p>a = b = c  表达式的意义是 a =（ b = c  ）</p>\n<p>而 「+」的结合方向是 「左到右」</p>\n<p>所以</p>\n<p>a + b + c  表达式的意义是 （a + b） + c</p>\n<h2 id=\"h2-c-\"><a name=\"C语言运算符优先级\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>C语言运算符优先级</h2><p><img src=\"http://localhost:4545/img/userArticleImg/1588839772009.jpg\" alt=\"\"><br>一般情况下，我们还是会把 x = y 写在if 外面，直接写在if里面还是挺有意思的。</p>\n<p>如果写成下面这样的话会输出什么呢？评论给出你的答案~```c</p>\n<h1 id=\"h1-include-stdio-h-\"><a name=\"include “stdio.h”\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>include “stdio.h”</h1><p>int main(void)<br>{<br> int x = 2;<br> int y = 4;<br> int z = 4;</p>\n<p> if( x = y &gt;= z){<br>  printf(“—————-01\\n”);<br> }<br> return (0);<br>}<br>```</p>\n', '![](http://localhost:4545/img/userArticleImg/1588839552791.jpg)\n####讨论这个有意义吗？\n\n这个是在知乎上看到的一个问题，评论挺多的。其中有人提到，研究这个东西有什么用？编程的时候我们不能这么写的。我记得在大学的时候，我们的副院长给我们上课，就给我们提到，要习惯并且喜欢使用 「（ 」和 「）」，这两个符号。\n\n所以上面的表达式，如果想表达清楚自己的意图，可以这样写\n`((x += 5) == 4)`\n或者是\n`(x += （5 == 4)）`\n####但是有些程序员为什么喜欢这样写呢？\n我们可以肯定，写出这样代码的人，一定对运算符优先级背得滚瓜烂熟了。如果作为一个程序员，他认为对运算符要了如指掌，他觉得别人对这个代码肯定一眼就能看懂，他写出这样的代码也是没有问题的。\n#####我们学这样的代码有什么用？\n学习这样并不表示我们要写出这样的代码，而是，我们如果在工作学习中，遇到这样的代码，我们就一眼能看出来这个代码的作用。\n\nC语言的标准有几百页，大部分人不会仔细研究每个细节，有些工程师觉得某些东西没有用，大概率是因为他在自己的工作中没有用到。有的程序员喜欢研究或者在工作中需要使用这样的方法，这就是这种代码存在的其中一个原因吧。\n\n##表达式和运算符优先级\nC语言在一个表达式中，如果遇到几个运算符，要考虑优先级和结合方向。\n\n比如，表达式 x pri1 y pri2 z，可能出现两种可能性\n- (x pri1 y )pri2 z\n- x pri1 (y pri2 z)\n如果运算符 pri1 的优先级比pri2 高，那么就是上面的第一种情况。\n\n如果运算符 pri1 的优先级比pri2 低，那么就是上面的第二种情况。\n\n如果优先级相同，那就要考虑结合方向。\n\n结合方向是 「左到右」或者「右到左」。\n\n例如，「= 」 的结合方向是 「右到左」。\n\n所以\n\na = b = c  表达式的意义是 a =（ b = c  ）\n\n而 「+」的结合方向是 「左到右」\n\n所以\n\na + b + c  表达式的意义是 （a + b） + c\n\n##C语言运算符优先级\n![](http://localhost:4545/img/userArticleImg/1588839772009.jpg)\n一般情况下，我们还是会把 x = y 写在if 外面，直接写在if里面还是挺有意思的。\n\n如果写成下面这样的话会输出什么呢？评论给出你的答案~```c\n#include \"stdio.h\"\n \nint main(void)\n{\n int x = 2; \n int y = 4;\n int z = 4;\n \n if( x = y >= z){\n  printf(\"-----------01\\n\");\n }\n return (0);\n} \n```\n\n\n\n\n', '讨论这个有意义吗？ 这个是在知乎上看到的一个问题，评论挺多的。其中有人提到，研究这个东西有什么用？编程的时候我们不能这么写的。我记得在大学的时候，我们的副院长给我们上课，就给我们提到，要习惯并且喜欢使', 2, NULL, NULL, 8, 0);
INSERT INTO `article` VALUES (21, 'Java基础知识IO流', '2020-05-07 16:45:07', 1, 2, '<h3 id=\"h3-io-\"><a name=\"IO流的概述\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>IO流的概述</h3><p>Java语言在计算机各部件之间的移动称为流.在各部件移动的流又分为输入流和输出流.<br>输入流:输入流是程序从计算机硬件中获取到的数据.<br>输出流:输出流是在程序中的数据输出到计算机硬件中.</p>\n<p>按照流的内容划分又分为字符流和字节流:<br>字节流:字节流是用来处理字节数据文件的.<br>什么是字节文件呢?像图片啊,声音啊,图形,java字节码文件(也就是.class为后缀的文件)等等这样的文件就是字节文件.<br>字符流:字符流(其实在java中处理字符流的类都是从字节流演变过来的,因为在计算机中存储的数据都是二级制形式,但是在处理字符的时候需要许多的步骤,为了简化出现了字符流)是处理文本文件的.</p>\n<p>那么问题就来了.我们用字节流和字符流都是跟文件进行处理和交互的,那么我们怎么得到这个文件呢<br>所以Java又提供了另一个类,就是File类,File类是IO包(java中所有的流处理类都在Java.IO包内)中唯一表示磁盘信息的对象.<br>File类的方法能够创建文件,删除文件,重命名文件,判断文件的读写权限以及是否存在和查询文件的最近修改时间等,而我们常用的方法就是创建文件,判读文件是否存在和删除文件,Java中File类还有一个特点就是目录也会被当做File使用</p>\n<h3 id=\"h3-file-\"><a name=\"File类的方法:\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>File类的方法:</h3><p>首先是构造方法:<br>File(File parent, String child) :从父抽象路径名和子路径名字符串创建新的 File实例<br>第一个参数代表的是父路径,而且是File类型的,第二个是子路径名,也就是要获取的文件</p>\n<p>File(String pathname) :通过将给定的路径名字符串转换为抽象路径名来创建新的 File实例<br>参数的路径可以为绝对路径或者是相对路径<br>File(String parent, String child) :从父路径名字符串和子路径名字符串创建新的 File实例<br>这个构造方法和上面一样,只不过第一个参数就是String类型的</p>\n<p>一般我们使用的处理文件的方法:<br>boolean exists():判断获取的文件或者目录是否存在.<br>boolean mkdir() :当判断的目录不存在时,可以试用这个方法创建文件,但是有个要求,在我们获取到的目录如果不存在父目录就会报错,只能创建有父目录的目录.<br>举个例子:D:\\io(io为目录),然后我们在程序中获取D:\\io\\demo01目录,判断是没有此目录的,所以我们使用mkdir()方法,就会创建此目录,若我们在程序中获取的是D:\\io\\java\\demo01,就会报错,原因是没有java父目录.而java为了避免这样的发生,就提供了另一个方法:<br>boolean mkdirs();此方法就是不管你有没有父路径都会创建成功,如果没有父路径也会把父路径也创建出来.<br>boolean:createNewFile():当我们获取的文件不存在的时候,使用此方法会在获取的路径名后面添加我们需要获取的文件<br>boolean delete():删除由此抽象路径名表示的文件或目录.<br>下面是程序演示:<br><img src=\"http://localhost:4545/img/userArticleImg/1588840033748.png\" alt=\"\"></p>\n<p>此时F盘下的io目录下是没有任何文件的.我们使用以下代码</p>\n<pre><code class=\"lang-java\">public class demo01 {\n    public static void main(String[] args) {\n     File file=new File(&quot;F:\\\\io\\\\javaFile&quot;);\n        exists(file);\n    }\n\n    public static void exists(File file){\n       if(!file.exists()){\n           file.mkdir();\n       }else{\n           System.out.println(&quot;该目录已被创建&quot;);\n       }\n    }\n    }\n</code></pre>\n<p>运行的结果:<br><img src=\"http://localhost:4545/img/userArticleImg/1588840098720.png\" alt=\"\"><br>下面是创建文件:此目录下现在是没有任何文件的<br><img src=\"http://localhost:4545/img/userArticleImg/1588840150000.png\" alt=\"\"></p>\n<p>执行的代码:</p>\n<pre><code class=\"lang-java\">public class demo01 {\n    public static void main(String[] args) {\n     File file=new File(&quot;F:\\\\io\\\\javaFile\\\\demo.txt&quot;);\n     try {\n         createNewFile(file);\n     }catch(IOException e){\n         e.printStackTrace();\n     }\n    }\n\n    public static void createNewFile(File file) throws IOException {\n        if(file.exists()){\n            file.createNewFile();\n        }\n    }\n    }\n</code></pre>\n<p>运行结果如下:<br><img src=\"http://localhost:4545/img/userArticleImg/1588840213677.png\" alt=\"\"><br>File类还有很多的方法,小伙伴有兴趣可以去JavaAPI文档查看.<br>以上就是获取文件,但是并文件内都是空的,所以现在我们开始处理文件,而处理文件我们也说了,有字符流和输出流,现在首先我们开始讲字符流.</p>\n', '###IO流的概述\nJava语言在计算机各部件之间的移动称为流.在各部件移动的流又分为输入流和输出流.\n输入流:输入流是程序从计算机硬件中获取到的数据.\n输出流:输出流是在程序中的数据输出到计算机硬件中.\n\n按照流的内容划分又分为字符流和字节流:\n字节流:字节流是用来处理字节数据文件的.\n什么是字节文件呢?像图片啊,声音啊,图形,java字节码文件(也就是.class为后缀的文件)等等这样的文件就是字节文件.\n字符流:字符流(其实在java中处理字符流的类都是从字节流演变过来的,因为在计算机中存储的数据都是二级制形式,但是在处理字符的时候需要许多的步骤,为了简化出现了字符流)是处理文本文件的.\n\n那么问题就来了.我们用字节流和字符流都是跟文件进行处理和交互的,那么我们怎么得到这个文件呢\n所以Java又提供了另一个类,就是File类,File类是IO包(java中所有的流处理类都在Java.IO包内)中唯一表示磁盘信息的对象.\nFile类的方法能够创建文件,删除文件,重命名文件,判断文件的读写权限以及是否存在和查询文件的最近修改时间等,而我们常用的方法就是创建文件,判读文件是否存在和删除文件,Java中File类还有一个特点就是目录也会被当做File使用\n\n###File类的方法:\n首先是构造方法:\nFile(File parent, String child) :从父抽象路径名和子路径名字符串创建新的 File实例\n第一个参数代表的是父路径,而且是File类型的,第二个是子路径名,也就是要获取的文件\n\nFile(String pathname) :通过将给定的路径名字符串转换为抽象路径名来创建新的 File实例\n参数的路径可以为绝对路径或者是相对路径\nFile(String parent, String child) :从父路径名字符串和子路径名字符串创建新的 File实例\n这个构造方法和上面一样,只不过第一个参数就是String类型的\n\n一般我们使用的处理文件的方法:\nboolean exists():判断获取的文件或者目录是否存在.\nboolean mkdir() :当判断的目录不存在时,可以试用这个方法创建文件,但是有个要求,在我们获取到的目录如果不存在父目录就会报错,只能创建有父目录的目录.\n举个例子:D:\\io(io为目录),然后我们在程序中获取D:\\io\\demo01目录,判断是没有此目录的,所以我们使用mkdir()方法,就会创建此目录,若我们在程序中获取的是D:\\io\\java\\demo01,就会报错,原因是没有java父目录.而java为了避免这样的发生,就提供了另一个方法:\nboolean mkdirs();此方法就是不管你有没有父路径都会创建成功,如果没有父路径也会把父路径也创建出来.\nboolean:createNewFile():当我们获取的文件不存在的时候,使用此方法会在获取的路径名后面添加我们需要获取的文件\nboolean delete():删除由此抽象路径名表示的文件或目录.\n下面是程序演示:\n![](http://localhost:4545/img/userArticleImg/1588840033748.png)\n\n此时F盘下的io目录下是没有任何文件的.我们使用以下代码\n```java\npublic class demo01 {\n    public static void main(String[] args) {\n     File file=new File(\"F:\\\\io\\\\javaFile\");\n        exists(file);\n    }\n\n    public static void exists(File file){\n       if(!file.exists()){\n           file.mkdir();\n       }else{\n           System.out.println(\"该目录已被创建\");\n       }\n    }\n    }\n\n```\n运行的结果:\n![](http://localhost:4545/img/userArticleImg/1588840098720.png)\n下面是创建文件:此目录下现在是没有任何文件的\n![](http://localhost:4545/img/userArticleImg/1588840150000.png)\n\n执行的代码:\n```java\npublic class demo01 {\n    public static void main(String[] args) {\n     File file=new File(\"F:\\\\io\\\\javaFile\\\\demo.txt\");\n     try {\n         createNewFile(file);\n     }catch(IOException e){\n         e.printStackTrace();\n     }\n    }\n\n    public static void createNewFile(File file) throws IOException {\n        if(file.exists()){\n            file.createNewFile();\n        }\n    }\n    }\n\n```\n运行结果如下:\n![](http://localhost:4545/img/userArticleImg/1588840213677.png)\nFile类还有很多的方法,小伙伴有兴趣可以去JavaAPI文档查看.\n以上就是获取文件,但是并文件内都是空的,所以现在我们开始处理文件,而处理文件我们也说了,有字符流和输出流,现在首先我们开始讲字符流.\n\n\n\n\n\n\n\n\n', 'IO流的概述 Java语言在计算机各部件之间的移动称为流.在各部件移动的流又分为输入流和输出流. 输入流:输入流是程序从计算机硬件中获取到的数据. 输出流:输出流是在程序中的数据输出到计算机硬件中. ', 2, NULL, NULL, 90, 1);
INSERT INTO `article` VALUES (22, '面试复习—— synchronized', '2020-05-07 00:00:00', 2, 2, '<h3 id=\"h3-synchronized\"><a name=\"synchronized\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>synchronized</h3><p>线程安全的主要原因<br>1.存在共享数据(也称临界资源)<br>2.存在多条线程共同操作这些共享数据<br>解决问题的根本方法<br>同一时刻且只有一个线程在操作共享数据，其他线程必须等到线程处理完数据后再对共享数据进行操作</p>\n<h3 id=\"h3-u4E92u65A5u9501u7684u7279u6027\"><a name=\"互斥锁的特性\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>互斥锁的特性</h3><p>互斥性：即再同一时间只允许一个线程持有某个对象锁，通过这种特性来实现多线程的协调机制，这样再同以时间只有一个线程对需要同步的代码块(符合操作)进行访问。互斥性也称为操作的原子性。</p>\n<p>可见性：必须确保再锁被释放之前，对共享变量所做的修改，对于随后获得该锁的另一个线程是可见的(即在获得锁时应获得最新共享变量值)，否则另一个线程可能是在本地缓存的某个副本上继续操作，从而引起不一致。</p>\n<p>synchronized 锁的不是代码，锁的都是对象</p>\n<h3 id=\"h3--\"><a name=\"根据获取的锁的分类：获取对象锁和获取类锁\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>根据获取的锁的分类：获取对象锁和获取类锁</h3><p>获取对象锁的两种用法</p>\n<p>1.同步代码块(synchronized (thihs) synchronized (类的实例对象)，锁是小括号(()中的实例对象 )</p>\n<p>2.同步非静态方法( synchronized method ),锁是当前对象的实例对象。</p>\n<p>获取类锁的两种用法 </p>\n<p>1.同步代码块(  synchronized (类.class)), 锁是小括号中的类对象(Class对象)</p>\n<p>2.同步静态方法( synchronized static method ),锁是当前对象的类对象( Class 对象)</p>\n<pre><code class=\"lang-java\">public class SyncThread implements Runnable {\n    @Override\n    public void run() {\n        String threadName = Thread.currentThread().getName();\n        if (threadName.startsWith(&quot;A&quot;)) {\n            async();  //异步\n        } else if (threadName.startsWith(&quot;B&quot;)) {\n            syncObjecyBlock1();  //同步代码\n        } else if (threadName.startsWith(&quot;C&quot;)) {\n            syncObjectMethod1();  //同步方法\n        }else if (threadName.startsWith(&quot;D&quot;)) {\n            syncClassBlock1();\n        }else if (threadName.startsWith(&quot;E&quot;)) {\n            syncClassMethod1();\n        }\n    }\n\n    // synchronized 修饰非静态对象\n    private synchronized void syncObjectMethod1() {\n        System.out.println(Thread.currentThread().getName() + &quot;  同步方法 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n        try {\n            System.out.println(Thread.currentThread().getName() + &quot;  同步方法 开始 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n            Thread.sleep(1000);\n            System.out.println(Thread.currentThread().getName() + &quot;  同步方法 结束 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    //方法中有 synchronized(this|object) {} 同步代码块\n    private void syncObjecyBlock1() {\n        System.out.println(Thread.currentThread().getName() + &quot;  同步代码块 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n        synchronized (this) {  //this 就算当前调用此方法的 Thread对象\n            try {\n                System.out.println(Thread.currentThread().getName() + &quot;  同步代码块 开始 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n                Thread.sleep(1000);\n                System.out.println(Thread.currentThread().getName() + &quot;  同步代码块 结束 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    //异步方法\n    private void async() {\n            try {\n                System.out.println(Thread.currentThread().getName() + &quot;  异步开始 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n                Thread.sleep(1000);\n                System.out.println(Thread.currentThread().getName() + &quot;  异步结束 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n        }\n    }\n\n    //类锁 同步代码块\n    private void syncClassBlock1(){\n        System.out.println(Thread.currentThread().getName() + &quot;  同步类代码块 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n        synchronized (SyncThread.class) {  //this 就算当前调用此方法的 Thread对象\n            try {\n                System.out.println(Thread.currentThread().getName() + &quot;  同步类代码块 开始 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n                Thread.sleep(1000);\n                System.out.println(Thread.currentThread().getName() + &quot;  同步类代码块  结束 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    //类锁 修饰静态方法\n    private synchronized  static void syncClassMethod1() {\n        System.out.println(Thread.currentThread().getName() + &quot;  同步类 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n        try {\n            System.out.println(Thread.currentThread().getName() + &quot;  同步类 开始 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n            Thread.sleep(1000);\n            System.out.println(Thread.currentThread().getName() + &quot;  同步类 结束 &quot; + new SimpleDateFormat(&quot;HH:mm:ss&quot;).format(new Date()));\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n\npublic class SyncDemo {\n    public static void main(String[] args) {\n        //下面的线程都使用同一个锁\n        // 如果使用的是 不同对象 所有线程会编程异步 ( Thread A1 = new Thread(new SyncThread(), &quot;A1&quot;); 就算创建不同对象\n        //同一个类不同对象锁 是互补干扰的\n        SyncThread syncThread = new SyncThread();\n        //异步执行\n        /*从结果中可以发现 A1 A2线程是异步执行的 A1启动之后,A2并未等待A1结束就开始执行start\n        并且A2线程 还比 A1线程先结束了  并且可以看到 A开头的线程并未受到其他线程同步代码块的影响\n        * */\n        Thread A1 = new Thread(syncThread, &quot;A1&quot;);\n        Thread A2 = new Thread(syncThread, &quot;A2&quot;);\n        //同步代码块执行\n        /*\n        * B类线程是同步的 其中一个线程在访问对象代码块时 另一个访问对象同步代码块的线程会被阻塞\n        * 看到结果就可以看得出 B2执行完之后 B1才能开始执行 是顺序执行的\n        * 原因是 synchronized()方法是要等待当前对象的 SyncThread 的同步锁\n        * 输出 同步代码块  这条语句还是异步的  没有相互等待\n        * */\n        Thread B1 = new Thread(syncThread, &quot;B1&quot;);\n        Thread B2 = new Thread(syncThread, &quot;B2&quot;);\n        //同步方法执行\n        /*\n        synchronized 的修饰方法 C 类的线程都是同步的  C的 同步方法语句输出  和 开始都是同时发生的\n        一个线程在访问对象的同步方法的时候 另一个访问同步方法的线程 会被阻塞\n        * */\n        Thread C1 = new Thread(syncThread, &quot;C1&quot;);\n        Thread C2 = new Thread(syncThread, &quot;C2&quot;);\n\n        //在统一对象锁的时候 类锁表现出来的行为和  对象锁表现的行为是一致的\n        Thread D1 = new Thread(syncThread, &quot;D1&quot;);\n        Thread D2 = new Thread(syncThread, &quot;D2&quot;);\n\n        Thread E1 = new Thread(syncThread, &quot;E1&quot;);\n        Thread E2 = new Thread(syncThread, &quot;E2&quot;);\n\n        /*B类线程 和C类线程做对比\n        B类线程是 同步代码块 C类线程是 同步方法\n        C类线线程 其中一个执行完了之后 B类线程才能开始执行\n        所以可以看出  synchronized 同步代码块 和 同步方法 synchronized 锁的是同一个对象\n        都是共用this 对象\n        * */\n        A1.start();\n        A2.start();\n        B1.start();\n        B2.start();\n        C1.start();\n        C2.start();\n\n        D1.start();\n        D2.start();\n        E1.start();\n        E2.start();\n    }\n}\n\n结果\nB1  同步代码块 18:11:36\nB2  同步代码块 18:11:36\nC1  同步方法 18:11:36\nD1  同步类代码块 18:11:36\nE2  同步类 18:11:36\nC1  同步方法 开始 18:11:36\nE2  同步类 开始 18:11:36\nD2  同步类代码块 18:11:36\nA2  异步开始 18:11:36\nA1  异步开始 18:11:36\nE2  同步类 结束 18:11:37\nC1  同步方法 结束 18:11:37\nB2  同步代码块 开始 18:11:37\nD2  同步类代码块 开始 18:11:37\nA1  异步结束 18:11:37\nA2  异步结束 18:11:37\nB2  同步代码块 结束 18:11:38\nD2  同步类代码块  结束 18:11:38\nD1  同步类代码块 开始 18:11:38\nB1  同步代码块 开始 18:11:38\nB1  同步代码块 结束 18:11:39\nD1  同步类代码块  结束 18:11:39\nE1  同步类 18:11:39\nC2  同步方法 18:11:39\nE1  同步类 开始 18:11:39\nC2  同步方法 开始 18:11:39\nC2  同步方法 结束 18:11:40\nE1  同步类 结束 18:11:40\n</code></pre>\n', '###synchronized\n线程安全的主要原因\n1.存在共享数据(也称临界资源)\n2.存在多条线程共同操作这些共享数据\n解决问题的根本方法\n同一时刻且只有一个线程在操作共享数据，其他线程必须等到线程处理完数据后再对共享数据进行操作\n\n###互斥锁的特性\n互斥性：即再同一时间只允许一个线程持有某个对象锁，通过这种特性来实现多线程的协调机制，这样再同以时间只有一个线程对需要同步的代码块(符合操作)进行访问。互斥性也称为操作的原子性。\n\n可见性：必须确保再锁被释放之前，对共享变量所做的修改，对于随后获得该锁的另一个线程是可见的(即在获得锁时应获得最新共享变量值)，否则另一个线程可能是在本地缓存的某个副本上继续操作，从而引起不一致。\n\nsynchronized 锁的不是代码，锁的都是对象\n\n \n\n###根据获取的锁的分类：获取对象锁和获取类锁\n获取对象锁的两种用法\n\n1.同步代码块(synchronized (thihs) synchronized (类的实例对象)，锁是小括号(()中的实例对象 )\n\n2.同步非静态方法( synchronized method ),锁是当前对象的实例对象。\n\n获取类锁的两种用法 \n\n1.同步代码块(  synchronized (类.class)), 锁是小括号中的类对象(Class对象)\n\n2.同步静态方法( synchronized static method ),锁是当前对象的类对象( Class 对象)\n\n```java\npublic class SyncThread implements Runnable {\n    @Override\n    public void run() {\n        String threadName = Thread.currentThread().getName();\n        if (threadName.startsWith(\"A\")) {\n            async();  //异步\n        } else if (threadName.startsWith(\"B\")) {\n            syncObjecyBlock1();  //同步代码\n        } else if (threadName.startsWith(\"C\")) {\n            syncObjectMethod1();  //同步方法\n        }else if (threadName.startsWith(\"D\")) {\n            syncClassBlock1();\n        }else if (threadName.startsWith(\"E\")) {\n            syncClassMethod1();\n        }\n    }\n \n    // synchronized 修饰非静态对象\n    private synchronized void syncObjectMethod1() {\n        System.out.println(Thread.currentThread().getName() + \"  同步方法 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n        try {\n            System.out.println(Thread.currentThread().getName() + \"  同步方法 开始 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n            Thread.sleep(1000);\n            System.out.println(Thread.currentThread().getName() + \"  同步方法 结束 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n \n    //方法中有 synchronized(this|object) {} 同步代码块\n    private void syncObjecyBlock1() {\n        System.out.println(Thread.currentThread().getName() + \"  同步代码块 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n        synchronized (this) {  //this 就算当前调用此方法的 Thread对象\n            try {\n                System.out.println(Thread.currentThread().getName() + \"  同步代码块 开始 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n                Thread.sleep(1000);\n                System.out.println(Thread.currentThread().getName() + \"  同步代码块 结束 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n \n    //异步方法\n    private void async() {\n            try {\n                System.out.println(Thread.currentThread().getName() + \"  异步开始 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n                Thread.sleep(1000);\n                System.out.println(Thread.currentThread().getName() + \"  异步结束 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n        }\n    }\n \n    //类锁 同步代码块\n    private void syncClassBlock1(){\n        System.out.println(Thread.currentThread().getName() + \"  同步类代码块 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n        synchronized (SyncThread.class) {  //this 就算当前调用此方法的 Thread对象\n            try {\n                System.out.println(Thread.currentThread().getName() + \"  同步类代码块 开始 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n                Thread.sleep(1000);\n                System.out.println(Thread.currentThread().getName() + \"  同步类代码块  结束 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n \n    //类锁 修饰静态方法\n    private synchronized  static void syncClassMethod1() {\n        System.out.println(Thread.currentThread().getName() + \"  同步类 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n        try {\n            System.out.println(Thread.currentThread().getName() + \"  同步类 开始 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n            Thread.sleep(1000);\n            System.out.println(Thread.currentThread().getName() + \"  同步类 结束 \" + new SimpleDateFormat(\"HH:mm:ss\").format(new Date()));\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}\n \n \npublic class SyncDemo {\n    public static void main(String[] args) {\n        //下面的线程都使用同一个锁\n        // 如果使用的是 不同对象 所有线程会编程异步 ( Thread A1 = new Thread(new SyncThread(), \"A1\"); 就算创建不同对象\n        //同一个类不同对象锁 是互补干扰的\n        SyncThread syncThread = new SyncThread();\n        //异步执行\n        /*从结果中可以发现 A1 A2线程是异步执行的 A1启动之后,A2并未等待A1结束就开始执行start\n        并且A2线程 还比 A1线程先结束了  并且可以看到 A开头的线程并未受到其他线程同步代码块的影响\n        * */\n        Thread A1 = new Thread(syncThread, \"A1\");\n        Thread A2 = new Thread(syncThread, \"A2\");\n        //同步代码块执行\n        /*\n        * B类线程是同步的 其中一个线程在访问对象代码块时 另一个访问对象同步代码块的线程会被阻塞\n        * 看到结果就可以看得出 B2执行完之后 B1才能开始执行 是顺序执行的\n        * 原因是 synchronized()方法是要等待当前对象的 SyncThread 的同步锁\n        * 输出 同步代码块  这条语句还是异步的  没有相互等待\n        * */\n        Thread B1 = new Thread(syncThread, \"B1\");\n        Thread B2 = new Thread(syncThread, \"B2\");\n        //同步方法执行\n        /*\n        synchronized 的修饰方法 C 类的线程都是同步的  C的 同步方法语句输出  和 开始都是同时发生的\n        一个线程在访问对象的同步方法的时候 另一个访问同步方法的线程 会被阻塞\n        * */\n        Thread C1 = new Thread(syncThread, \"C1\");\n        Thread C2 = new Thread(syncThread, \"C2\");\n \n        //在统一对象锁的时候 类锁表现出来的行为和  对象锁表现的行为是一致的\n        Thread D1 = new Thread(syncThread, \"D1\");\n        Thread D2 = new Thread(syncThread, \"D2\");\n \n        Thread E1 = new Thread(syncThread, \"E1\");\n        Thread E2 = new Thread(syncThread, \"E2\");\n \n        /*B类线程 和C类线程做对比\n        B类线程是 同步代码块 C类线程是 同步方法\n        C类线线程 其中一个执行完了之后 B类线程才能开始执行\n        所以可以看出  synchronized 同步代码块 和 同步方法 synchronized 锁的是同一个对象\n        都是共用this 对象\n        * */\n        A1.start();\n        A2.start();\n        B1.start();\n        B2.start();\n        C1.start();\n        C2.start();\n \n        D1.start();\n        D2.start();\n        E1.start();\n        E2.start();\n    }\n}\n \n结果\nB1  同步代码块 18:11:36\nB2  同步代码块 18:11:36\nC1  同步方法 18:11:36\nD1  同步类代码块 18:11:36\nE2  同步类 18:11:36\nC1  同步方法 开始 18:11:36\nE2  同步类 开始 18:11:36\nD2  同步类代码块 18:11:36\nA2  异步开始 18:11:36\nA1  异步开始 18:11:36\nE2  同步类 结束 18:11:37\nC1  同步方法 结束 18:11:37\nB2  同步代码块 开始 18:11:37\nD2  同步类代码块 开始 18:11:37\nA1  异步结束 18:11:37\nA2  异步结束 18:11:37\nB2  同步代码块 结束 18:11:38\nD2  同步类代码块  结束 18:11:38\nD1  同步类代码块 开始 18:11:38\nB1  同步代码块 开始 18:11:38\nB1  同步代码块 结束 18:11:39\nD1  同步类代码块  结束 18:11:39\nE1  同步类 18:11:39\nC2  同步方法 18:11:39\nE1  同步类 开始 18:11:39\nC2  同步方法 开始 18:11:39\nC2  同步方法 结束 18:11:40\nE1  同步类 结束 18:11:40\n```\n', 'synchronized 线程安全的主要原因 1.存在共享数据(也称临界资源) 2.存在多条线程共同操作这些共享数据 解决问题的根本方法 同一时刻且只有一个线程在操作共享数据，其他线程必须等到线程处理', 2, NULL, NULL, 0, 0);
INSERT INTO `article` VALUES (23, '【java基础（六）】基本数据类型-整型', '2020-05-07 00:00:00', 2, 2, '<h3 id=\"h3-u4EC0u4E48u662Fu6570u636Eu7C7Bu578B\"><a name=\"什么是数据类型\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>什么是数据类型</h3><p>什么是程序？程序就是对一堆数字的鼓捣。专业的说就是：<br><code>程序（Program） = 数据结构（Data Structure）+ 算法（Algorithm）。</code></p>\n<p>数据类型在数据结构中的定义：一组性质相同的值的集合以及定义在这个值集合上的一组操作的总称。</p>\n<p>所以我们要编写程序，就要捣鼓数据结构，数据结构的最基本组成就是基本数据类型。</p>\n<h3 id=\"h3-java-\"><a name=\"Java中的八大基本数据类型\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>Java中的八大基本数据类型</h3><ul>\n<li>Java是一种强类型语言。<br><code>强类型语言：也称为强类型定义语言。是一种总是强制类型定义的语言，要求变量的使用要严格符合定义，所有变量都必须先定义后使用。来自百度百科 - 强类型语言</code></li><li>必须为每一个变量声明一种类型。<br>Java中，一共有8中基本类型（primitive type），其中4种整型（int、short、long、byte）、2种浮点类型（float、double）、1中字符类型（char）、1种布尔类型（boolean）。<br><code>布尔：乔治·布尔（George Boole，1815.11.2 ~ 1864），19世纪最重要的数学家之一。由于其在符号逻辑运算中的特殊贡献，很多计算机语言中将逻辑运算称为布尔运算，将其结果称为布尔值，用于表示真和假。来自百度百科 - 布尔。</code></li><li>浮点：这里的点指的是“小数点”，可以上下浮动小数点，从而表达更大范围的实数。<h3 id=\"h3--int-short-long-byte-\"><a name=\"整型（int、short、long、byte）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>整型（int、short、long、byte）</h3></li><li>整型用于表示没有小数部分的数值。</li><li>允许是负数。</li><li><p>Java提供4种整型，具体如下：<br>| 类型  |  存储需求 | 取值范围  |<br>| —————— | —————— | —————— |<br>|  int | 4字节  | -2147483648 - 2147483647 （整好超过20亿）  |<br>| short  | 2字节  | -32768 - 32767  |<br>| long  | 8字节  | -9223372036854775808 - 9223372036854775807  |<br>| byte      | 1字节  | -128 - 127  |</p>\n</li><li><p>在Java中，整型的范围与运行的Java代码的机器无关（Java的可移植性）、所有的数值类型所占据的字符数量与平台无关。</p>\n</li><li>int最常用。在超不多20亿的数字计算，都可以用int。</li><li>当int不够用的时候，就需要用到long。</li><li>byte和short类型主要用于特定的应用场景（底层的文件处理、需要控制占用存储空间量的大数组）。</li><li>长整形（long）数值后有一个后缀L或l（小写的L）。十六进制数值有一个前缀0x或0X（零x）（如0xCAFE）。八进制有一个前缀0（零），如010对应八进制中的8。很显然，八进制表示法很容易混淆，所以建议最好不要使用八进制常数。</li><li>从Java7开始，加上前缀0b或0B就可以写二进制数。例如0b1001就是9。</li><li>从Java7开始，可以为数字字面量加下划线。如1_000_000表示一百万，等同于1000000，只是为了人们读的方便。</li><li><p>实际编程举例说明：<br>```java<br>// Java 中的八大数据类型 - 实例<br>public class PrimitiveType {</p>\n<p>  public static void main(String[] args) {</p>\n<pre><code>  System.out.println(Integer.TYPE + &quot;的取值范围：&quot; + Integer.MIN_VALUE + &quot; - &quot; + Integer.MAX_VALUE);\n  System.out.println(Short.TYPE + &quot;的取值范围：&quot; + Short.MIN_VALUE + &quot; - &quot; + Short.MAX_VALUE);\n  System.out.println(Long.TYPE + &quot;的取值范围：&quot; + Long.MIN_VALUE + &quot; - &quot; + Long.MAX_VALUE);\n  System.out.println(Byte.TYPE + &quot;的取值范围：&quot; + Byte.MIN_VALUE + &quot; - &quot; + Byte.MAX_VALUE);\n  System.out.println(&quot;长整形Long的后缀L: &quot; + 9223372036854775807L);\n  System.out.println(&quot;十六进制0xCAFE = &quot; + 0xCAFE);\n  System.out.println(&quot;八进制010 = &quot; + 010);\n  System.out.println(&quot;二进制0b1001 = &quot; + 0b1001);\n  System.out.println(&quot;加下划线表示一百万1_000_000 = &quot; + 1_000_000);\n</code></pre><p>  }</p>\n</li></ul>\n<p>}</p>\n<p>```<br><img src=\"http://localhost:4545/img/userArticleImg/1588841169623.jpg\" alt=\"\"><br>程序解读：</p>\n<p>程序中的Integer、Short、Long、Byte属于基本类型int、short、long、byte的包装类，暂时只需要知道，不需要太深入了解。</p>\n<p>程序中的“” + “”，是字符串的连接方法，相当于把多个字符串连接为单个字符串。</p>\n', '###什么是数据类型\n什么是程序？程序就是对一堆数字的鼓捣。专业的说就是：\n`程序（Program） = 数据结构（Data Structure）+ 算法（Algorithm）。`\n\n数据类型在数据结构中的定义：一组性质相同的值的集合以及定义在这个值集合上的一组操作的总称。\n\n所以我们要编写程序，就要捣鼓数据结构，数据结构的最基本组成就是基本数据类型。\n###Java中的八大基本数据类型\n- Java是一种强类型语言。\n`强类型语言：也称为强类型定义语言。是一种总是强制类型定义的语言，要求变量的使用要严格符合定义，所有变量都必须先定义后使用。来自百度百科 - 强类型语言`\n- 必须为每一个变量声明一种类型。\nJava中，一共有8中基本类型（primitive type），其中4种整型（int、short、long、byte）、2种浮点类型（float、double）、1中字符类型（char）、1种布尔类型（boolean）。\n`布尔：乔治·布尔（George Boole，1815.11.2 ~ 1864），19世纪最重要的数学家之一。由于其在符号逻辑运算中的特殊贡献，很多计算机语言中将逻辑运算称为布尔运算，将其结果称为布尔值，用于表示真和假。来自百度百科 - 布尔。`\n- 浮点：这里的点指的是“小数点”，可以上下浮动小数点，从而表达更大范围的实数。\n###整型（int、short、long、byte）\n- 整型用于表示没有小数部分的数值。\n- 允许是负数。\n- Java提供4种整型，具体如下：\n| 类型  |  存储需求 | 取值范围  |\n| ------------ | ------------ | ------------ |\n|  int | 4字节  | -2147483648 - 2147483647 （整好超过20亿）  |\n| short  | 2字节  | -32768 - 32767  |\n| long  | 8字节  | -9223372036854775808 - 9223372036854775807  |\n| byte	  | 1字节  | -128 - 127  |\n\n- 在Java中，整型的范围与运行的Java代码的机器无关（Java的可移植性）、所有的数值类型所占据的字符数量与平台无关。\n- int最常用。在超不多20亿的数字计算，都可以用int。\n- 当int不够用的时候，就需要用到long。\n- byte和short类型主要用于特定的应用场景（底层的文件处理、需要控制占用存储空间量的大数组）。\n- 长整形（long）数值后有一个后缀L或l（小写的L）。十六进制数值有一个前缀0x或0X（零x）（如0xCAFE）。八进制有一个前缀0（零），如010对应八进制中的8。很显然，八进制表示法很容易混淆，所以建议最好不要使用八进制常数。\n- 从Java7开始，加上前缀0b或0B就可以写二进制数。例如0b1001就是9。\n- 从Java7开始，可以为数字字面量加下划线。如1_000_000表示一百万，等同于1000000，只是为了人们读的方便。\n- 实际编程举例说明：\n```java\n// Java 中的八大数据类型 - 实例\npublic class PrimitiveType {\n\n	public static void main(String[] args) {\n		System.out.println(Integer.TYPE + \"的取值范围：\" + Integer.MIN_VALUE + \" - \" + Integer.MAX_VALUE);\n		System.out.println(Short.TYPE + \"的取值范围：\" + Short.MIN_VALUE + \" - \" + Short.MAX_VALUE);\n		System.out.println(Long.TYPE + \"的取值范围：\" + Long.MIN_VALUE + \" - \" + Long.MAX_VALUE);\n		System.out.println(Byte.TYPE + \"的取值范围：\" + Byte.MIN_VALUE + \" - \" + Byte.MAX_VALUE);\n		System.out.println(\"长整形Long的后缀L: \" + 9223372036854775807L);\n		System.out.println(\"十六进制0xCAFE = \" + 0xCAFE);\n		System.out.println(\"八进制010 = \" + 010);\n		System.out.println(\"二进制0b1001 = \" + 0b1001);\n		System.out.println(\"加下划线表示一百万1_000_000 = \" + 1_000_000);\n	}\n\n}\n\n```\n![](http://localhost:4545/img/userArticleImg/1588841169623.jpg)\n程序解读：\n\n程序中的Integer、Short、Long、Byte属于基本类型int、short、long、byte的包装类，暂时只需要知道，不需要太深入了解。\n\n程序中的“” + “”，是字符串的连接方法，相当于把多个字符串连接为单个字符串。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n', '什么是数据类型 什么是程序？程序就是对一堆数字的鼓捣。专业的说就是： 程序（Program） = 数据结构（Data Structure）+ 算法（Algorithm）。 数据类型在数据结构中的定义：', 2, NULL, NULL, 16, 0);
INSERT INTO `article` VALUES (28, 'test', '2020-05-07 20:23:12', 1, 1, '<p><img src=\"http://localhost:4545/img/userArticleImg/1588854158214.png\" alt=\"\"></p>\n', '![](http://localhost:4545/img/userArticleImg/1588854158214.png)', '', 1, NULL, NULL, 2, 0);
INSERT INTO `article` VALUES (31, '再次测试图片的加载问题', '2020-05-18 16:36:05', 1, 1, '<p><img src=\"http://localhost:4545/img/userArticleImg/1589790961597.jpg\" alt=\"\"></p>\n', '![](http://localhost:4545/img/userArticleImg/1589790961597.jpg)', '', 1, NULL, NULL, 2, 0);

-- ----------------------------
-- Table structure for article_type
-- ----------------------------
DROP TABLE IF EXISTS `article_type`;
CREATE TABLE `article_type`  (
  `article_type_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '文章类型id',
  `article_type_name` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '文章类型名称',
  `remark` varchar(1000) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '描述',
  `count` int(11) NULL DEFAULT NULL COMMENT '数量',
  `q_count` int(11) NULL DEFAULT NULL COMMENT '问题数量',
  PRIMARY KEY (`article_type_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 9 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '文章类型表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of article_type
-- ----------------------------
INSERT INTO `article_type` VALUES (1, '测试文章', NULL, 2, 2);
INSERT INTO `article_type` VALUES (2, 'JAVA', NULL, 3, 0);
INSERT INTO `article_type` VALUES (3, '操作系统', NULL, 0, 0);
INSERT INTO `article_type` VALUES (4, '休闲', NULL, 2, 0);
INSERT INTO `article_type` VALUES (5, 'ASP.NET', NULL, 0, 0);
INSERT INTO `article_type` VALUES (6, '数据结构', NULL, 0, 0);
INSERT INTO `article_type` VALUES (7, 'C++', NULL, 1, 0);
INSERT INTO `article_type` VALUES (8, 'LeetCode', NULL, 0, 0);

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment`  (
  `comment_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '评论id',
  `comment_date` datetime(0) NULL DEFAULT NULL COMMENT '评论时间',
  `content` varchar(1000) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '评论内容',
  `user_id` int(11) NULL DEFAULT NULL COMMENT '评论者',
  `article_id` int(11) NULL DEFAULT NULL COMMENT '评论的文章',
  `status` int(11) NULL DEFAULT NULL COMMENT '评论状态（是否通过审核）',
  `last_id` int(11) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '上一条评论id',
  PRIMARY KEY (`comment_id`) USING BTREE,
  INDEX `fk_comment_user`(`user_id`) USING BTREE,
  INDEX `fk_comment_article`(`article_id`) USING BTREE,
  CONSTRAINT `fk_comment_article` FOREIGN KEY (`article_id`) REFERENCES `article` (`article_id`) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT `fk_comment_user` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE CASCADE ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 23 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES (22, '2020-05-20 19:34:14', '这篇文章写的不错！！！', 1, 21, NULL, NULL);

-- ----------------------------
-- Table structure for feedback
-- ----------------------------
DROP TABLE IF EXISTS `feedback`;
CREATE TABLE `feedback`  (
  `feedback_id` int(11) NOT NULL AUTO_INCREMENT,
  `feedback_email` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '反馈者email',
  `feedback_context` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '反馈内容',
  `feedback_date` datetime(0) NULL DEFAULT NULL COMMENT '反馈时间',
  `user_id` int(11) NULL DEFAULT NULL COMMENT '反馈者',
  PRIMARY KEY (`feedback_id`) USING BTREE,
  INDEX `fk_feedback_user`(`user_id`) USING BTREE,
  CONSTRAINT `fk_feedback_user` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of feedback
-- ----------------------------
INSERT INTO `feedback` VALUES (1, '1123714881@qq.com', '测试反馈', '2020-05-01 16:59:05', 1);
INSERT INTO `feedback` VALUES (2, '1123714881@qq.com', '部分内容存在bug', '2020-05-01 17:12:24', 1);
INSERT INTO `feedback` VALUES (3, '1123714881@qq.com', '测试反馈', '2020-05-02 14:54:04', 1);

-- ----------------------------
-- Table structure for follow
-- ----------------------------
DROP TABLE IF EXISTS `follow`;
CREATE TABLE `follow`  (
  `follow_id` int(11) NOT NULL AUTO_INCREMENT,
  `current_user_id` int(11) NOT NULL COMMENT '关注者的id',
  `followed_user_id` int(11) NOT NULL COMMENT '被关注者的id',
  `follow_time` datetime(0) NULL DEFAULT NULL COMMENT '开始关注的时间',
  `status` int(11) NULL DEFAULT NULL COMMENT '关注的状态，1为关注，2为取消关注',
  `cancel_follow_time` datetime(0) NULL DEFAULT NULL COMMENT '取消关注时间',
  PRIMARY KEY (`follow_id`) USING BTREE,
  INDEX `fk_followed_user`(`followed_user_id`) USING BTREE,
  CONSTRAINT `fk_followed_user` FOREIGN KEY (`followed_user_id`) REFERENCES `user` (`user_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of follow
-- ----------------------------
INSERT INTO `follow` VALUES (1, 1, 6, '2020-03-28 16:40:10', 1, NULL);
INSERT INTO `follow` VALUES (2, 1, 3, '2020-03-28 16:51:38', 1, NULL);
INSERT INTO `follow` VALUES (3, 1, 2, '2020-05-02 14:54:05', 1, NULL);
INSERT INTO `follow` VALUES (4, 1, 1, '2020-05-02 18:47:13', 1, NULL);

-- ----------------------------
-- Table structure for notice
-- ----------------------------
DROP TABLE IF EXISTS `notice`;
CREATE TABLE `notice`  (
  `notice_id` int(11) NOT NULL AUTO_INCREMENT,
  `notice_context` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '通知内容',
  `notice_date` datetime(0) NULL DEFAULT NULL COMMENT '通知发布时间',
  `admin_id` int(11) NULL DEFAULT NULL COMMENT '发布通知的管理员id',
  PRIMARY KEY (`notice_id`) USING BTREE,
  INDEX `fk_notice_admin`(`admin_id`) USING BTREE,
  CONSTRAINT `fk_notice_admin` FOREIGN KEY (`admin_id`) REFERENCES `admin` (`admin_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of notice
-- ----------------------------
INSERT INTO `notice` VALUES (1, 'Soul论坛开通啦！', '2020-05-01 17:52:09', 1);
INSERT INTO `notice` VALUES (2, '欢迎来到Soul社区！！！', '2020-05-20 20:09:48', 1);

-- ----------------------------
-- Table structure for question
-- ----------------------------
DROP TABLE IF EXISTS `question`;
CREATE TABLE `question`  (
  `question_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL COMMENT '问题发布者id',
  `question_type_id` int(11) NOT NULL COMMENT '问题类型id',
  `question_title` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '问题的标题',
  `question_content` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '问题内容',
  `question_answer_quantity` int(11) NULL DEFAULT NULL COMMENT '问题回复数量',
  `question_post_date` datetime(0) NULL DEFAULT NULL COMMENT '问题发布时间',
  PRIMARY KEY (`question_id`) USING BTREE,
  INDEX `fk_question_user`(`user_id`) USING BTREE,
  INDEX `fk_queston_type`(`question_type_id`) USING BTREE,
  CONSTRAINT `fk_question_user` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT `fk_queston_type` FOREIGN KEY (`question_type_id`) REFERENCES `article_type` (`article_type_id`) ON DELETE CASCADE ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 10 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of question
-- ----------------------------
INSERT INTO `question` VALUES (1, 1, 1, '测试问题', '这里只是想测试一下', 1, '2020-04-05 18:24:19');
INSERT INTO `question` VALUES (2, 1, 1, '我提问一下', '我的提问结束了........', 0, '2020-04-05 18:52:11');

-- ----------------------------
-- Table structure for question_answer
-- ----------------------------
DROP TABLE IF EXISTS `question_answer`;
CREATE TABLE `question_answer`  (
  `answer_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '回复的id',
  `answer_date` datetime(0) NULL DEFAULT NULL COMMENT '回复的日期',
  `content` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '回复的内容',
  `user_id` int(11) NULL DEFAULT NULL COMMENT '回复者',
  `question_id` int(11) NULL DEFAULT NULL COMMENT '回复的问题的id',
  PRIMARY KEY (`answer_id`) USING BTREE,
  INDEX `fk_answer_user`(`user_id`) USING BTREE,
  INDEX `fk_answer_question`(`question_id`) USING BTREE,
  CONSTRAINT `fk_answer_question` FOREIGN KEY (`question_id`) REFERENCES `question` (`question_id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `fk_answer_user` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of question_answer
-- ----------------------------
INSERT INTO `question_answer` VALUES (2, '2020-04-11 20:34:33', '测试评论功能是否正常', 1, 1);

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `user_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '用户id',
  `user_name` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '昵称',
  `user_password` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '密码',
  `user_email` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '邮箱地址',
  `user_head_portrait` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用户头像',
  `user_sex` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用户性别',
  `user_points` int(11) NULL DEFAULT NULL COMMENT '积分',
  `user_grade` int(11) NULL DEFAULT NULL COMMENT 'vip等级',
  `user_experience` int(11) NOT NULL COMMENT '经验',
  `seal` bit(1) NOT NULL COMMENT '是否被封禁',
  `user_role_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '角色昵称，管理员之类的',
  `user_register_date` datetime(0) NULL DEFAULT NULL COMMENT '注册时间',
  `user_lately_login_time` datetime(0) NOT NULL COMMENT '最近一次登录时间',
  `personalized_signature` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '这个人很懒，什么都没有写...' COMMENT '个性签名',
  `follow_quantity` int(11) NULL DEFAULT NULL COMMENT '关注用户的数量',
  `follow_by_others` int(11) NULL DEFAULT NULL COMMENT '被关注数量',
  `article_quantity` int(11) NULL DEFAULT NULL COMMENT '所属文章数量',
  `question_quantity` int(11) NULL DEFAULT NULL COMMENT '该用户发布的问题数量',
  `answer_quantity_to_user` int(11) NULL DEFAULT NULL COMMENT '回答该用户的用户数量',
  `answer_quantity` int(11) NULL DEFAULT NULL COMMENT '该用户的回答数量',
  PRIMARY KEY (`user_id`, `user_lately_login_time`) USING BTREE,
  INDEX `user_id`(`user_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 18 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES (1, 'lemon', '96cf058bc81ebb3b5da56b7fd9aaed82', '2294642544@qq.com', '/img/headPortrait/1589789718409.jpg', '女', NULL, 6, 710, b'0', '会员', '2020-02-17 05:53:37', '2020-05-20 19:34:00', '心有猛虎，细嗅蔷薇！', NULL, NULL, 6, 2, NULL, NULL);
INSERT INTO `user` VALUES (2, 'test02', '96cf058bc81ebb3b5da56b7fd9aaed82', 'tang@163.com', '/img/headPortrait/paly_picture1.jpeg', '女', NULL, 2, 220, b'0', '会员', '2020-02-22 05:22:20', '2020-05-07 16:35:18', '这个人很懒，什么都没有写...', NULL, NULL, 2, 0, NULL, NULL);
INSERT INTO `user` VALUES (3, 'test03', '96cf058bc81ebb3b5da56b7fd9aaed82', 'xu@163.com', '/img/headPortrait/notice_bg.jpg', '男', NULL, 3, 300, b'0', '会员', '2020-02-22 05:22:54', '2020-03-26 13:50:46', '这个人很懒，什么都没有写...', NULL, NULL, 0, 0, NULL, NULL);
INSERT INTO `user` VALUES (4, 'test04', '96cf058bc81ebb3b5da56b7fd9aaed82', 'zhang@163.com', '/img/headPortrait/paly_picture5.jpg', '女', NULL, 4, 425, b'0', '会员', '2020-02-22 05:23:31', '2020-02-22 05:23:31', '这个人很懒，什么都没有写...', NULL, NULL, 0, 0, NULL, NULL);
INSERT INTO `user` VALUES (5, 'test05', '96cf058bc81ebb3b5da56b7fd9aaed82', 'wang@163.com', '/img/headPortrait/paly_picture4.jpg', '男', NULL, 5, 500, b'0', '会员', '2020-02-22 05:23:58', '2020-02-22 05:23:58', '这个人很懒，什么都没有写...', NULL, NULL, 0, 0, NULL, NULL);
INSERT INTO `user` VALUES (6, 'test06', '96cf058bc81ebb3b5da56b7fd9aaed82', 'li@163.com', '/img/headPortrait/paly_picture3.jpg', '女', NULL, 6, 645, b'0', '会员', '2020-02-22 05:25:16', '2020-05-07 15:55:14', '这个人很懒，什么都没有写...', NULL, NULL, 0, 0, NULL, NULL);
INSERT INTO `user` VALUES (7, 'test07', '96cf058bc81ebb3b5da56b7fd9aaed82', 'zhou@163.com', '/img/headPortrait/paly_picture2.jpg', '男', NULL, 7, 690, b'1', '会员', '2020-02-22 05:25:48', '2020-02-22 05:25:48', '这个人很懒，什么都没有写...', NULL, NULL, 0, 0, NULL, NULL);
INSERT INTO `user` VALUES (13, 'testnull', '96cf058bc81ebb3b5da56b7fd9aaed82', '1111@qq.com', '/img/headPortrait/user01.png', '男', NULL, 0, 0, b'1', '会员', '2020-05-01 21:29:11', '2020-05-01 21:29:37', NULL, 0, 0, 0, 0, 0, 0);
INSERT INTO `user` VALUES (14, 'test8', '96cf058bc81ebb3b5da56b7fd9aaed82', 'ttt@qq.com', '/img/headPortrait/user01.png', '男', NULL, 0, 0, b'0', '会员', '2020-05-01 21:33:51', '2020-05-01 21:34:03', NULL, 0, 0, 0, 0, 0, 0);
INSERT INTO `user` VALUES (15, 'test9', '96cf058bc81ebb3b5da56b7fd9aaed82', '4848@qq.com', '/img/headPortrait/user01.png', '男', NULL, 0, 0, b'0', '会员', '2020-05-07 00:19:19', '2020-05-07 00:19:19', NULL, 0, 0, 0, 0, 0, 0);
INSERT INTO `user` VALUES (16, 'soul', 'c13367945d5d4c91047b3b50234aa7ab', '123456@qq.com', '/img/headPortrait/user01.png', '男', NULL, 0, 10, b'0', '会员', '2020-05-07 19:46:53', '2020-05-07 19:47:10', '', 0, 0, 0, 0, 0, 0);
INSERT INTO `user` VALUES (17, 'soul', 'c13367945d5d4c91047b3b50234aa7ab', '456789@qq.com', '/img/headPortrait/user01.png', '男', NULL, 0, 10, b'0', '会员', '2020-05-07 19:53:06', '2020-05-07 19:53:23', '', 0, 0, 0, 0, 0, 0);

-- ----------------------------
-- Table structure for user_log
-- ----------------------------
DROP TABLE IF EXISTS `user_log`;
CREATE TABLE `user_log`  (
  `log_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '日志id',
  `user_id` int(11) NOT NULL COMMENT '用户id',
  `behavior` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '行为',
  `request_type` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '请求类型',
  `source` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '来源',
  `request_address` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '请求地址',
  `request_method` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '请求方法',
  `request_parameter` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '请求参数',
  `session_id` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT 'sessionID',
  `execution_time` datetime(0) NULL DEFAULT NULL COMMENT '执行时间',
  PRIMARY KEY (`log_id`) USING BTREE,
  INDEX `fk_log_user`(`user_id`) USING BTREE,
  CONSTRAINT `fk_log_user` FOREIGN KEY (`user_id`) REFERENCES `user` (`user_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 224 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user_log
-- ----------------------------
INSERT INTO `user_log` VALUES (1, 1, '用户注册', 'POST', '安徽蚌埠', NULL, NULL, NULL, NULL, '2020-02-08 00:00:00');
INSERT INTO `user_log` VALUES (2, 1, '用户登录', 'POST', '安徽蚌埠', NULL, NULL, NULL, NULL, '2020-02-08 00:00:00');
INSERT INTO `user_log` VALUES (3, 1, '用户登录', 'POST', '安徽凤阳', NULL, NULL, NULL, NULL, '2020-02-08 00:00:00');
INSERT INTO `user_log` VALUES (4, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@449d3a64', '76E74CD9E4BF2CB371BA3829B528E219', '2020-02-27 00:00:00');
INSERT INTO `user_log` VALUES (5, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f1d7872', 'ABC7D239FEF8E6B37935D318856DDC30', '2020-02-27 14:49:49');
INSERT INTO `user_log` VALUES (6, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6862bfd0', '3455090EF9875BF34535F2214F932798', '2020-02-28 16:13:56');
INSERT INTO `user_log` VALUES (7, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@43871bbf', '3455090EF9875BF34535F2214F932798', '2020-02-28 16:13:58');
INSERT INTO `user_log` VALUES (8, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@34a5dffa', '9F33F78D887870B3AA074982AE12D9F5', '2020-02-28 17:37:04');
INSERT INTO `user_log` VALUES (9, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c2da845', 'DEDC21631AFA3E324E6BA8DF2C95C6A1', '2020-02-28 20:15:12');
INSERT INTO `user_log` VALUES (10, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4b01e243', '2527ADEE7EDF0BD304F670312E92450A', '2020-02-29 14:33:57');
INSERT INTO `user_log` VALUES (11, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@bca4b67', 'E4C09B2B31934838B71957FE96A26FDE', '2020-02-29 14:51:46');
INSERT INTO `user_log` VALUES (12, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f2cd569', 'AC2201FCF678A5422801F2172CD053B6', '2020-02-29 20:13:27');
INSERT INTO `user_log` VALUES (13, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3fd7adc5', 'AEEEA3D0C051143095E4AB59E5CB81C8', '2020-03-02 20:47:01');
INSERT INTO `user_log` VALUES (14, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@980c764', '4C7367E871CDC437A87C5FCBDCE411F8', '2020-03-02 22:15:48');
INSERT INTO `user_log` VALUES (15, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@352c5c83', 'AE1569D155D0D4B426FE341099D12317', '2020-03-02 22:23:25');
INSERT INTO `user_log` VALUES (16, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@18a3f3e1', '6FA1A6C4157B33621E02BDB7E3E291D2', '2020-03-02 22:25:26');
INSERT INTO `user_log` VALUES (17, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@60f8321c', 'F1DA954C2119BA42EAAD8CCDBFDE896D', '2020-03-02 22:33:38');
INSERT INTO `user_log` VALUES (18, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@567cd305', '2AF8F07AB7AAEFCADD71EDC3A1F94685', '2020-03-04 18:31:18');
INSERT INTO `user_log` VALUES (19, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ed53e91', 'E654D1C701B2A5C934CB942C2DDF7BC8', '2020-03-04 18:54:15');
INSERT INTO `user_log` VALUES (20, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@598f18ab', 'BFA992B3CA73F9E07FD0E51ADE297C70', '2020-03-04 19:02:57');
INSERT INTO `user_log` VALUES (21, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@250f83e4', '43F737AF037BCE39FDDAF1C4BF765D63', '2020-03-04 19:05:15');
INSERT INTO `user_log` VALUES (22, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@ed20394', '56E59FFBBC92748E5EDBEFAF501CEE83', '2020-03-04 19:09:15');
INSERT INTO `user_log` VALUES (23, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@66d31f75', 'CE062B8493FC17CE466D1161D4EE360D', '2020-03-04 19:55:06');
INSERT INTO `user_log` VALUES (24, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7a0dfda1', 'A17B6B219035BAC5F6AF1B068BDF1431', '2020-03-04 20:55:30');
INSERT INTO `user_log` VALUES (25, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@65c7ff85', '1E7A672F47A054EE73B98D7C0C6E4FE5', '2020-03-04 21:06:57');
INSERT INTO `user_log` VALUES (26, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@581382b9', '5C7309E254D69125394F4F8830FFECE2', '2020-03-04 21:22:57');
INSERT INTO `user_log` VALUES (27, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5c3d4a0f', 'E3DEC7A6D894BD1B9691E97B44257239', '2020-03-04 21:30:32');
INSERT INTO `user_log` VALUES (28, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5d946ba7', '0364E5B51BE92B5B723F88A2BD65C08E', '2020-03-05 15:30:15');
INSERT INTO `user_log` VALUES (29, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5a0020fe', 'BCF36439918ADEEE12D39F56529C0F99', '2020-03-05 15:48:23');
INSERT INTO `user_log` VALUES (30, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@2ede3aa5', '425538C20A5C4C3415018C6B682756C1', '2020-03-05 15:48:23');
INSERT INTO `user_log` VALUES (31, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@2ed587f1', '069C0A64BB92D66247DD2E10C02F152C', '2020-03-08 16:02:34');
INSERT INTO `user_log` VALUES (32, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@380c982e', 'DC603F31578C21DFE0E0038CE7B49DDE', '2020-03-08 17:37:59');
INSERT INTO `user_log` VALUES (33, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@68b66836', '9DEE7A233C51B47DF6D362D13F45969F', '2020-03-12 15:07:11');
INSERT INTO `user_log` VALUES (34, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6778adad', '1CC76DFD3925D4B356CD9F7A15FAF7CF', '2020-03-12 15:11:45');
INSERT INTO `user_log` VALUES (35, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@755d8ef1', '42273B68D988E2A7921C10FC6998A48A', '2020-03-12 15:16:21');
INSERT INTO `user_log` VALUES (36, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6de43f0f', 'A71E14C64B9CD7EC182610E721949479', '2020-03-12 15:31:22');
INSERT INTO `user_log` VALUES (37, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4668a7bb', 'A48FD6FA20C94D6E3E21B3BFB30B685E', '2020-03-12 15:43:48');
INSERT INTO `user_log` VALUES (38, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@57b136da', 'C616904B748F8D760F7F922CDF0F2AED', '2020-03-12 16:37:01');
INSERT INTO `user_log` VALUES (39, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4140c58f', '20E2A7823FAAA1FE47042A127709BE47', '2020-03-12 17:29:56');
INSERT INTO `user_log` VALUES (40, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e9bebfc', '4FD7B5682386FA33C6DF324A4162097A', '2020-03-12 17:51:01');
INSERT INTO `user_log` VALUES (41, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7023d170', '0B3FF7B09BA8E1AEFBD29503290505A9', '2020-03-12 17:57:17');
INSERT INTO `user_log` VALUES (42, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7a4e5074', '47B36062C6B091A10D42B32A02BDF5B2', '2020-03-12 18:02:39');
INSERT INTO `user_log` VALUES (43, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4f767e01', '433673C30EC4C839AFD9B36775A8151B', '2020-03-12 21:56:41');
INSERT INTO `user_log` VALUES (44, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@52af46f', '5B2EA50655147513D1D42BB4C8AE78C9', '2020-03-13 17:49:21');
INSERT INTO `user_log` VALUES (45, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@277ab15a', '75E2AA972A913BCDFF3B96CE6D3A1198', '2020-03-14 16:14:17');
INSERT INTO `user_log` VALUES (46, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@382d9ead', 'EE0A12A7B608F7896CA5378861C7FF72', '2020-03-14 16:25:06');
INSERT INTO `user_log` VALUES (47, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1f2fad14', '143AC879C35D83A22A40334EF439626C', '2020-03-14 16:51:55');
INSERT INTO `user_log` VALUES (48, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ccb05bc', '317B60D911618A60A59D9F40A2F977B2', '2020-03-14 16:57:28');
INSERT INTO `user_log` VALUES (49, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@584d522c', 'FC2415620BA07983EA3F17F579F927F0', '2020-03-14 18:04:37');
INSERT INTO `user_log` VALUES (50, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@416be562', '60D301F72EE374969D6E1AC0F3BC89EF', '2020-03-14 18:09:20');
INSERT INTO `user_log` VALUES (51, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@359c6896', 'B40522A74DEFCB48C4374D4052B5FE01', '2020-03-14 18:13:39');
INSERT INTO `user_log` VALUES (52, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b73e87c', '3B77ADDAC77A37F2B736C9652914054B', '2020-03-14 18:16:58');
INSERT INTO `user_log` VALUES (53, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@504fe2a7', '592AFA45E1C975E779A4172FCD66E3DA', '2020-03-15 21:21:59');
INSERT INTO `user_log` VALUES (54, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4866f44e', '50580D178D2F89366A7D02120D28F25F', '2020-03-15 21:30:58');
INSERT INTO `user_log` VALUES (55, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4be4c03e', '5D3024DC5F71DE07809FAA6F19569331', '2020-03-15 21:35:45');
INSERT INTO `user_log` VALUES (56, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5d95aec2', 'C86F2901023C904CB99142771A0AD220', '2020-03-15 21:47:21');
INSERT INTO `user_log` VALUES (57, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f8ebdbb', 'F3429B8D7CAEA2F82D4DE7E742A2363E', '2020-03-15 22:03:48');
INSERT INTO `user_log` VALUES (58, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@f8601f4', '2EAE06B39FCC96FD89EC242688DCD9C4', '2020-03-16 16:34:54');
INSERT INTO `user_log` VALUES (59, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@648688a0', 'E26DC67172E05150C25FD573F06842BD', '2020-03-16 16:52:58');
INSERT INTO `user_log` VALUES (60, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7ac7dbeb', '604946AF8FBEC228AE5C03EFD5EB77CC', '2020-03-16 17:04:55');
INSERT INTO `user_log` VALUES (61, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@e4e3381', '808F9795D0EC0D05F27721B7B4025777', '2020-03-16 17:12:55');
INSERT INTO `user_log` VALUES (62, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6fed59aa', '426002D8DF2205BFC19BC68890564173', '2020-03-16 17:20:14');
INSERT INTO `user_log` VALUES (63, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4e587a72', '2EED743F01EAB725DC7D55FE59B695DA', '2020-03-16 17:52:38');
INSERT INTO `user_log` VALUES (64, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@504c76c1', '4E24E7F3E43BCC3427ED00447189B8EC', '2020-03-16 18:00:50');
INSERT INTO `user_log` VALUES (65, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@675cd4ba', '3A3B90D0A525B717D785D3246A359F23', '2020-03-16 18:19:02');
INSERT INTO `user_log` VALUES (66, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7be24e7f', '2EE0C04EE85FDED1609F90984E89529D', '2020-03-16 18:25:23');
INSERT INTO `user_log` VALUES (67, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4ee41f9b', '998B1B2D06AE9052882656F0C66D457A', '2020-03-16 18:31:42');
INSERT INTO `user_log` VALUES (68, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@49877876', '9CBA99FDE940A3DDDE4449A429E9DAFC', '2020-03-17 13:11:58');
INSERT INTO `user_log` VALUES (69, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@238870b5', '1C59D29DEC5B5B4855B45D75523CE978', '2020-03-17 13:42:01');
INSERT INTO `user_log` VALUES (70, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5389fd20', 'D2B46F2BFBC188667E6D07D754203DA1', '2020-03-17 13:46:49');
INSERT INTO `user_log` VALUES (71, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@643180e1', 'BDFC9C4669BD621FC09DFA2E3F3F9E83', '2020-03-17 13:56:08');
INSERT INTO `user_log` VALUES (72, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3c99edb4', '09125CCE83C85D80ECA267592F18FA00', '2020-03-17 14:35:17');
INSERT INTO `user_log` VALUES (73, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1327c512', '8139F8746D6E8D7D455A3E2EC919555C', '2020-03-17 14:54:56');
INSERT INTO `user_log` VALUES (74, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@54474d15', '67758B9D0829268C2C6B11BDA2E0484C', '2020-03-18 15:05:58');
INSERT INTO `user_log` VALUES (75, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@470e444e', '67758B9D0829268C2C6B11BDA2E0484C', '2020-03-18 15:16:09');
INSERT INTO `user_log` VALUES (76, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1cd99a16', '67758B9D0829268C2C6B11BDA2E0484C', '2020-03-18 15:26:21');
INSERT INTO `user_log` VALUES (77, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@43e3c7eb', '67758B9D0829268C2C6B11BDA2E0484C', '2020-03-18 15:36:35');
INSERT INTO `user_log` VALUES (78, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3f3f838b', '4953F1A69C3B6E86BB2304946E79290E', '2020-03-19 13:18:10');
INSERT INTO `user_log` VALUES (79, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@33dc969', '480D29FE602029345FEC4C508D3F00FB', '2020-03-19 15:57:27');
INSERT INTO `user_log` VALUES (80, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6459578b', 'E6F0B4A7C011AAF36CE53E8DCE18E2D2', '2020-03-19 18:44:08');
INSERT INTO `user_log` VALUES (81, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@b682200', '9816621870756F3DC49D2208DC152699', '2020-03-20 15:22:52');
INSERT INTO `user_log` VALUES (82, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@980e037', '8661F188FEEE79DD9C3B736CBC477723', '2020-03-25 10:38:26');
INSERT INTO `user_log` VALUES (83, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@35bc7bc2', 'CED3B66D1CE3D0ECB1783BD5EEBBE355', '2020-03-25 11:18:35');
INSERT INTO `user_log` VALUES (84, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@10872e4', '53B4E7B3E37466AB797C5FB94B26109B', '2020-03-25 11:26:55');
INSERT INTO `user_log` VALUES (85, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5c6cd1fa', 'DDD529A3B2B6DFDF61D3953A563921CD', '2020-03-25 11:29:13');
INSERT INTO `user_log` VALUES (86, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@62e07903', '13BD538072012AB913CFC8384C7F227D', '2020-03-25 11:32:13');
INSERT INTO `user_log` VALUES (87, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@75291b04', '2B42E23084416A41788C48911E6AC071', '2020-03-25 11:38:39');
INSERT INTO `user_log` VALUES (88, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@67e6a223', '387357B0300F28FE632529087BF5BC8B', '2020-03-25 12:14:13');
INSERT INTO `user_log` VALUES (89, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@23f125bc', 'A957A024CE4CD5F9B9D1175080117181', '2020-03-26 13:00:25');
INSERT INTO `user_log` VALUES (90, 3, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7da4c5d8', '471AFCA8E85A1B68282E786CD8F6B698', '2020-03-26 13:50:46');
INSERT INTO `user_log` VALUES (91, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@57b34b60', 'A118642FBAE9CD56F48FC0F4ABB6B862', '2020-03-27 16:18:02');
INSERT INTO `user_log` VALUES (92, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@35a9d74f', '6481B8C997B50E82E0A1454BA1AC29B6', '2020-03-27 20:44:46');
INSERT INTO `user_log` VALUES (93, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3dae3734', 'C5EB3E6D797EC9EB50C5F469DECEBC09', '2020-03-27 21:00:19');
INSERT INTO `user_log` VALUES (94, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@544c8d1a', '702F5A81207EA8FE9F293F37508E560F', '2020-03-28 21:35:00');
INSERT INTO `user_log` VALUES (95, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7df93755', 'B8011FF15C04EEFFB631EC78F512164B', '2020-03-28 22:19:22');
INSERT INTO `user_log` VALUES (96, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@64e38ec2', 'FBA16CA1BB224F4499FFC50F593166F3', '2020-03-28 22:34:58');
INSERT INTO `user_log` VALUES (97, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@19edf8cb', 'A77219B463491AF6C29757EB91B9561D', '2020-03-28 22:51:44');
INSERT INTO `user_log` VALUES (98, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6cf12776', '04576EE470698B80D7AEE0D08C5DC8C0', '2020-03-28 22:58:10');
INSERT INTO `user_log` VALUES (99, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@25c7cfa4', 'D78DDC11A5FEBD1152D1E9140F6E156A', '2020-03-28 23:01:47');
INSERT INTO `user_log` VALUES (100, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7a83de77', '41C32D667A5F72D9AE765F5D1C344582', '2020-03-28 23:04:58');
INSERT INTO `user_log` VALUES (101, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6e42a292', '877809DD878CD8627B54CF08DD86138C', '2020-03-28 23:10:55');
INSERT INTO `user_log` VALUES (102, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@cd19d29', '743FC36A2B0EBD2A55D7BC6309225CBF', '2020-03-28 23:17:22');
INSERT INTO `user_log` VALUES (103, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@99a5fe4', 'F1BA2E5B2D918DD78C4E989CD2E7B4C2', '2020-03-28 23:19:08');
INSERT INTO `user_log` VALUES (104, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7be04832', '9C0EE60AF05446BFC2EDB4899E4AEBB8', '2020-03-29 13:30:25');
INSERT INTO `user_log` VALUES (105, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@14af7064', '2645F9A0ECCD325F4B5BB36C10678072', '2020-04-04 16:15:24');
INSERT INTO `user_log` VALUES (106, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4cf9027b', '3163F0A378AC6AF1312B6285B0186432', '2020-04-04 16:44:00');
INSERT INTO `user_log` VALUES (107, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5a1e5617', '0BBDDA4C39240631902B5DADF518AC88', '2020-04-04 17:17:13');
INSERT INTO `user_log` VALUES (108, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@52e31e2c', 'C94AE22CA3D5D1BE47799D4CEE317681', '2020-04-04 19:11:21');
INSERT INTO `user_log` VALUES (109, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3ab943ec', '0247B4D7BC61F6E906FC8627B321F7FA', '2020-04-04 20:06:06');
INSERT INTO `user_log` VALUES (110, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7200ff6f', '420971BFFA8F5D2CD8EC6FDCBECF1B63', '2020-04-04 20:09:02');
INSERT INTO `user_log` VALUES (111, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6348a93d', '7CA2F086E8D379ECC99300A01B7B88B8', '2020-04-04 21:16:15');
INSERT INTO `user_log` VALUES (112, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3c42b59b', '9C4F34E66113305CFCB3287BDD82133D', '2020-04-04 21:20:13');
INSERT INTO `user_log` VALUES (113, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@337b386f', '6C30E60FCE7B5AE4F32AB2F38EED7756', '2020-04-04 22:36:47');
INSERT INTO `user_log` VALUES (114, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4b0efe91', '4EA8F937C0E1FE1D89564E8DD11DB58C', '2020-04-04 22:48:19');
INSERT INTO `user_log` VALUES (115, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f4e4462', '5B4041E84A4105908101546F65561716', '2020-04-05 13:58:08');
INSERT INTO `user_log` VALUES (116, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@40921158', '59ACEAA0931CFDBC361FCA98B38DACD6', '2020-04-05 19:02:45');
INSERT INTO `user_log` VALUES (117, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d663f78', '80CF2CA8F9D31AC2A55CE7B4D1281891', '2020-04-06 15:23:42');
INSERT INTO `user_log` VALUES (118, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@18d32f9e', 'B6280917E950604B1AD43E30C105650D', '2020-04-06 15:31:59');
INSERT INTO `user_log` VALUES (119, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1cae83d9', 'A7F4E0A61FE52D735C59D4984A06647D', '2020-04-06 16:33:46');
INSERT INTO `user_log` VALUES (120, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3cb5f5d7', '572131F8E9EF1096F7711C52C9CEA370', '2020-04-08 15:24:04');
INSERT INTO `user_log` VALUES (121, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@10d3bee', '754B3FB91A94D72BE973BA3E700E0447', '2020-04-09 13:52:50');
INSERT INTO `user_log` VALUES (122, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@546e25ca', '36C22BBB6E41DCEA293D3563EFD7BA1C', '2020-04-10 10:31:45');
INSERT INTO `user_log` VALUES (123, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5d999495', '46BD2545BBCF79D704F4946D649AD3BB', '2020-04-10 11:37:14');
INSERT INTO `user_log` VALUES (124, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@665d74cd', '8C9A3E78192BDFA1793B423FC4774CC5', '2020-04-10 13:57:40');
INSERT INTO `user_log` VALUES (125, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5fbd4d86', '45CAF7CC691CBC9B3644FD695D4C3E32', '2020-04-11 20:13:08');
INSERT INTO `user_log` VALUES (126, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@18123584', '4C8F98DC0B725ABAF97DD95F2E57A673', '2020-04-11 20:21:08');
INSERT INTO `user_log` VALUES (127, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@30a13da1', '8D4EFD831150F599F5D6F353268B1EE4', '2020-04-11 20:25:56');
INSERT INTO `user_log` VALUES (128, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b857c0b', 'A52695F96F875C33107BC77B9B9D3F72', '2020-04-11 20:34:17');
INSERT INTO `user_log` VALUES (129, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5325de02', 'A52695F96F875C33107BC77B9B9D3F72', '2020-04-11 20:35:24');
INSERT INTO `user_log` VALUES (130, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@ca1e4ff', '888E3B4364A3509D2E2DF97CF7F800F4', '2020-04-11 21:15:07');
INSERT INTO `user_log` VALUES (131, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4654cd8d', 'D74ECB541A861B19FC740959A3AC9936', '2020-04-11 21:40:16');
INSERT INTO `user_log` VALUES (132, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@39382002', '151707E132B9FE0A36A490A5EA1B6623', '2020-04-14 21:11:12');
INSERT INTO `user_log` VALUES (133, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1512f3c0', 'FA5AAD3313381BB629E05AA3F0412883', '2020-04-16 16:59:42');
INSERT INTO `user_log` VALUES (134, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1be26e9c', 'CF659C6072A3190D0C15B630E293FBAA', '2020-04-20 19:48:32');
INSERT INTO `user_log` VALUES (135, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@55466998', '4EF656499678FF5AA00F2A3669E45A69', '2020-04-22 09:38:09');
INSERT INTO `user_log` VALUES (136, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6e299d47', 'AE353BF0443ED139CA91B90EE7F69649', '2020-04-22 17:24:06');
INSERT INTO `user_log` VALUES (137, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@54a0aef9', 'FC848F5F698B2B690050298ADD93A8D8', '2020-04-23 14:13:42');
INSERT INTO `user_log` VALUES (138, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@25555c99', 'B1AC454BA7D566A643D64DA5108B2D6D', '2020-04-23 14:21:11');
INSERT INTO `user_log` VALUES (139, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7bc3c867', '32D289089140D273C926A998556A7FFF', '2020-04-23 14:59:14');
INSERT INTO `user_log` VALUES (140, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@645ae0a3', 'EE50B82D8853BA2EE3DB8D695BC4AF75', '2020-04-27 18:53:33');
INSERT INTO `user_log` VALUES (141, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@39a620a0', '832191E19C4825E554D6401D5F0478D5', '2020-04-29 21:50:41');
INSERT INTO `user_log` VALUES (142, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f3178ab', 'D6751EA6A19A91E643CE7D307C1493EC', '2020-05-01 00:11:21');
INSERT INTO `user_log` VALUES (143, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5a211494', '3779B051F9D2608B16CA35C77AAE838D', '2020-05-01 01:12:55');
INSERT INTO `user_log` VALUES (144, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d96ad1f', 'F8BAEB84137B5AEB98A6A76910E6BF7B', '2020-05-01 11:11:39');
INSERT INTO `user_log` VALUES (145, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5847ef7e', 'D91EC8AA4C766E55D82E3104B37F5AFD', '2020-05-01 12:54:50');
INSERT INTO `user_log` VALUES (146, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@35982034', 'CB456D695D873C022F4959681CB3038B', '2020-05-01 17:12:02');
INSERT INTO `user_log` VALUES (147, 13, '用户注册', 'POST', '安徽蚌埠', 'http://localhost:4545/user/reg', '/user/reg', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@55813313', '7D2A5371EB05638C9149EB6230EA2F14', '2020-05-01 21:29:12');
INSERT INTO `user_log` VALUES (148, 13, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7810b7c8', '7D2A5371EB05638C9149EB6230EA2F14', '2020-05-01 21:29:37');
INSERT INTO `user_log` VALUES (149, 14, '用户注册', 'POST', '安徽蚌埠', 'http://localhost:4545/user/reg', '/user/reg', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f847478', '60A10273894FDFCAF83B74CBB4CF7E82', '2020-05-01 21:33:51');
INSERT INTO `user_log` VALUES (150, 14, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@59f2212e', '60A10273894FDFCAF83B74CBB4CF7E82', '2020-05-01 21:34:03');
INSERT INTO `user_log` VALUES (151, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@2c5e4158', '42F480831C4127B945794179D1A67CE3', '2020-05-01 21:49:04');
INSERT INTO `user_log` VALUES (152, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@60440140', 'D9A76EF0B43E6902D98DB1D5BA3CE4BD', '2020-05-01 21:52:49');
INSERT INTO `user_log` VALUES (153, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3dd31b9a', '4E5390062386C3C924CF0D8E724EC6C9', '2020-05-02 18:29:23');
INSERT INTO `user_log` VALUES (154, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@70674ce5', '185B18961DDB9449AC969045B8B6ECC2', '2020-05-02 18:33:09');
INSERT INTO `user_log` VALUES (155, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@b6a4747', '9596272217430C9000333EA324A02541', '2020-05-02 18:47:10');
INSERT INTO `user_log` VALUES (156, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5780e6c0', '82FF780E854176FD02F0A5ED3868566D', '2020-05-05 14:32:30');
INSERT INTO `user_log` VALUES (157, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1f08c427', '071D61586A0181EA489248437AC5E8D6', '2020-05-05 14:34:22');
INSERT INTO `user_log` VALUES (158, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@23914d00', '5C2A9524EC3081D85C80A5147E68846A', '2020-05-05 14:38:37');
INSERT INTO `user_log` VALUES (159, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5f0a5e0e', '5C2A9524EC3081D85C80A5147E68846A', '2020-05-05 14:39:22');
INSERT INTO `user_log` VALUES (160, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6ed52c6e', 'D1BECC96CCE573A9AB1C5653AE26EE16', '2020-05-05 15:21:55');
INSERT INTO `user_log` VALUES (161, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@45016266', 'D1BECC96CCE573A9AB1C5653AE26EE16', '2020-05-05 15:22:17');
INSERT INTO `user_log` VALUES (162, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@8bc60b9', '740E83658F2E5ADD2B67A27ABFA13202', '2020-05-05 15:27:34');
INSERT INTO `user_log` VALUES (163, 1, '重新编辑文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@854c4a9', '740E83658F2E5ADD2B67A27ABFA13202', '2020-05-05 15:28:04');
INSERT INTO `user_log` VALUES (164, 1, '重新编辑文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4391a85d', '740E83658F2E5ADD2B67A27ABFA13202', '2020-05-05 15:29:19');
INSERT INTO `user_log` VALUES (165, 15, '用户注册', 'POST', '安徽蚌埠', 'http://localhost:4545/user/reg', '/user/reg', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3918445a', 'B1241DD77959CCFD1F18AC329C6BD18A', '2020-05-07 00:19:20');
INSERT INTO `user_log` VALUES (166, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6f776d1c', 'A9588512776F07D223A45160A2C6A478', '2020-05-07 00:24:35');
INSERT INTO `user_log` VALUES (167, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7ad3cf00', '865BD2D07F273B44996CE661C5A92A42', '2020-05-07 09:11:54');
INSERT INTO `user_log` VALUES (168, 1, '重新编辑文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@2c5e0ee3', '865BD2D07F273B44996CE661C5A92A42', '2020-05-07 09:12:41');
INSERT INTO `user_log` VALUES (169, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6e4be04c', 'FD09704EB5F294FE1760B71EC1DC08A0', '2020-05-07 10:23:27');
INSERT INTO `user_log` VALUES (170, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1408237c', '197DFBDE5E1AD79276D0392BAD22B7EE', '2020-05-07 10:48:55');
INSERT INTO `user_log` VALUES (171, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@59fc1f5e', '044207F5FF72820FD6B5883A736EE8F8', '2020-05-07 11:12:18');
INSERT INTO `user_log` VALUES (172, 1, '新增草稿', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveDraft', '/page/saveDraft', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1cb867ef', '044207F5FF72820FD6B5883A736EE8F8', '2020-05-07 11:23:01');
INSERT INTO `user_log` VALUES (173, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1452154d', 'B622D438378A0618DADF5A77A5D2A8D8', '2020-05-07 14:01:25');
INSERT INTO `user_log` VALUES (174, 1, '重新编辑文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c723112', 'B622D438378A0618DADF5A77A5D2A8D8', '2020-05-07 14:01:47');
INSERT INTO `user_log` VALUES (175, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@203cfcd6', '76D3C04821F83E26CCC85DBB19A349E3', '2020-05-07 14:07:29');
INSERT INTO `user_log` VALUES (176, 1, '新增草稿', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveDraft', '/page/saveDraft', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@709da15a', '76D3C04821F83E26CCC85DBB19A349E3', '2020-05-07 14:07:57');
INSERT INTO `user_log` VALUES (177, 1, '重新编辑文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@75e27d23', '76D3C04821F83E26CCC85DBB19A349E3', '2020-05-07 14:09:22');
INSERT INTO `user_log` VALUES (178, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5033a3d6', '11EEA7A2AA3C7EA73DDAEE61943462BA', '2020-05-07 14:27:15');
INSERT INTO `user_log` VALUES (179, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4de6de8f', '36DCF4B19200362C741C99EF5208E00D', '2020-05-07 14:28:35');
INSERT INTO `user_log` VALUES (180, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@12d7f101', 'D0E2B61D96B82459F6696985A57E8684', '2020-05-07 14:39:25');
INSERT INTO `user_log` VALUES (181, 6, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4cd257d6', '2816775D0C1C4B0FF7771AE56D4F2A4D', '2020-05-07 15:55:15');
INSERT INTO `user_log` VALUES (182, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@771cdc0d', 'E3540C396CD78FA16FFD3F7EF4053742', '2020-05-07 16:12:41');
INSERT INTO `user_log` VALUES (183, 1, '新增草稿', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveDraft', '/page/saveDraft', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@513fb71f', 'E3540C396CD78FA16FFD3F7EF4053742', '2020-05-07 16:14:01');
INSERT INTO `user_log` VALUES (184, 1, '重新编辑文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1b3f3266', 'E3540C396CD78FA16FFD3F7EF4053742', '2020-05-07 16:14:16');
INSERT INTO `user_log` VALUES (185, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7c1df295', 'E3540C396CD78FA16FFD3F7EF4053742', '2020-05-07 16:18:26');
INSERT INTO `user_log` VALUES (186, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@755784a3', 'E3540C396CD78FA16FFD3F7EF4053742', '2020-05-07 16:23:49');
INSERT INTO `user_log` VALUES (187, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@b1e94e3', 'E3540C396CD78FA16FFD3F7EF4053742', '2020-05-07 16:32:55');
INSERT INTO `user_log` VALUES (188, 2, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d39cb48', '8A21819E620BF4F3217EE0C238188F7E', '2020-05-07 16:35:18');
INSERT INTO `user_log` VALUES (189, 2, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@53687478', '8A21819E620BF4F3217EE0C238188F7E', '2020-05-07 16:38:09');
INSERT INTO `user_log` VALUES (190, 2, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7e653957', '8A21819E620BF4F3217EE0C238188F7E', '2020-05-07 16:46:44');
INSERT INTO `user_log` VALUES (191, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@79e22820', '59C7347DDF10350AD6C49C9A8AD5AF9E', '2020-05-07 17:00:46');
INSERT INTO `user_log` VALUES (192, 16, '用户注册', 'POST', '安徽蚌埠', 'http://localhost:4545/user/reg', '/user/reg', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7051745b', '7138D62222D845DCD9F259889520760C', '2020-05-07 19:46:54');
INSERT INTO `user_log` VALUES (193, 16, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4d833474', '7138D62222D845DCD9F259889520760C', '2020-05-07 19:47:10');
INSERT INTO `user_log` VALUES (194, 16, '新增草稿', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveDraft', '/page/saveDraft', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@23fb1d47', '7138D62222D845DCD9F259889520760C', '2020-05-07 19:47:57');
INSERT INTO `user_log` VALUES (195, 16, '重新编辑文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@47a02b42', '7138D62222D845DCD9F259889520760C', '2020-05-07 19:48:14');
INSERT INTO `user_log` VALUES (196, 16, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@734738cf', '7138D62222D845DCD9F259889520760C', '2020-05-07 19:50:20');
INSERT INTO `user_log` VALUES (197, 17, '用户注册', 'POST', '安徽蚌埠', 'http://localhost:4545/user/reg', '/user/reg', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@39d82548', 'D1A9CD41E626F92ED1AEDE05C7D9C114', '2020-05-07 19:53:06');
INSERT INTO `user_log` VALUES (198, 17, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@c442096', 'D1A9CD41E626F92ED1AEDE05C7D9C114', '2020-05-07 19:53:23');
INSERT INTO `user_log` VALUES (199, 17, '新增草稿', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveDraft', '/page/saveDraft', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@79e38d2f', 'D1A9CD41E626F92ED1AEDE05C7D9C114', '2020-05-07 19:54:04');
INSERT INTO `user_log` VALUES (200, 17, '重新编辑文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4487809b', 'D1A9CD41E626F92ED1AEDE05C7D9C114', '2020-05-07 19:54:16');
INSERT INTO `user_log` VALUES (201, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@607fef01', 'A9850C197A66DA292FB7291A60C7BC8A', '2020-05-07 19:58:28');
INSERT INTO `user_log` VALUES (202, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@5a757dc5', 'A9850C197A66DA292FB7291A60C7BC8A', '2020-05-07 20:03:46');
INSERT INTO `user_log` VALUES (203, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@2ba36e9a', 'B2A8449983EAA9149716DF274FDE7306', '2020-05-07 20:22:19');
INSERT INTO `user_log` VALUES (204, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@492d5a93', 'B2A8449983EAA9149716DF274FDE7306', '2020-05-07 20:23:12');
INSERT INTO `user_log` VALUES (205, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@71d8b71d', 'B2A8449983EAA9149716DF274FDE7306', '2020-05-07 20:24:11');
INSERT INTO `user_log` VALUES (206, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@2d483975', '7DB4EFAD110F1725032761ABABAFD215', '2020-05-07 20:35:14');
INSERT INTO `user_log` VALUES (207, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3a13e9b3', '7D662823293A4711E8C163248CDF51FB', '2020-05-07 20:37:19');
INSERT INTO `user_log` VALUES (208, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7215981f', '8234804B31FEFD5677AEF50A8C05BF59', '2020-05-07 21:03:45');
INSERT INTO `user_log` VALUES (209, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c9d6110', 'D5CFFDA8ABF15F63CFF0D1D12F7D65D0', '2020-05-07 21:14:20');
INSERT INTO `user_log` VALUES (210, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b9c54d6', '8066E599E8E0036F98D6E4A6086481AE', '2020-05-18 14:23:50');
INSERT INTO `user_log` VALUES (211, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@4a1367c2', 'EE0679D7E7964BB7EF063C7D737F9A89', '2020-05-18 15:16:26');
INSERT INTO `user_log` VALUES (212, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@338b8772', '10459F33EC4A0DA167EC3E071729508E', '2020-05-18 15:29:58');
INSERT INTO `user_log` VALUES (213, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@6b8e9f5c', '5443B51DFDC3977AD7BEA41694FEA37D', '2020-05-18 15:36:12');
INSERT INTO `user_log` VALUES (214, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@314bc8a4', '9D7DD1974DDCA59726D97A31AB927138', '2020-05-18 15:39:32');
INSERT INTO `user_log` VALUES (215, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@48ac4649', 'B91F0B303FFA3C7F1B3152CA3CE38A94', '2020-05-18 15:51:52');
INSERT INTO `user_log` VALUES (216, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@bba3eb3', '1813CCC9588F2DDD311DEE5FDA097EE8', '2020-05-18 15:57:16');
INSERT INTO `user_log` VALUES (217, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@59e9cc5f', '0FD623E2BD5B30C0925E4AC428162764', '2020-05-18 16:01:51');
INSERT INTO `user_log` VALUES (218, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b9eaad9', 'DA75974A56B0344F6AF896109B2183E2', '2020-05-18 16:05:22');
INSERT INTO `user_log` VALUES (219, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@7783934c', 'E0F35F7B5D28127F7B73E9B73F239D2C', '2020-05-18 16:15:09');
INSERT INTO `user_log` VALUES (220, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@8ec8257', 'E0F35F7B5D28127F7B73E9B73F239D2C', '2020-05-18 16:16:18');
INSERT INTO `user_log` VALUES (221, 1, '新增文章', 'POST', '安徽蚌埠', 'http://localhost:4545/page/saveArticle', '/page/saveArticle', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@73e9f559', 'E0F35F7B5D28127F7B73E9B73F239D2C', '2020-05-18 16:36:05');
INSERT INTO `user_log` VALUES (222, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@27007d3d', '3DC271E18259444BB5CBD4E6AE2EA452', '2020-05-20 14:32:37');
INSERT INTO `user_log` VALUES (223, 1, '用户登录', 'POST', '安徽蚌埠', 'http://localhost:4545/user/login', '/user/login', 'org.apache.shiro.web.servlet.ShiroHttpServletRequest@be8d532', 'A857D46453FFAA867B59246E486D96AF', '2020-05-20 19:34:00');

-- ----------------------------
-- Table structure for user_read_log
-- ----------------------------
DROP TABLE IF EXISTS `user_read_log`;
CREATE TABLE `user_read_log`  (
  `read_id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NULL DEFAULT NULL,
  `user_ip` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用户ip',
  `user_read_date` datetime(0) NULL DEFAULT NULL COMMENT '阅读日期',
  `user_id` int(11) NULL DEFAULT NULL COMMENT '用户id',
  PRIMARY KEY (`read_id`) USING BTREE,
  INDEX `fk_article_user_read`(`article_id`) USING BTREE,
  CONSTRAINT `fk_article_user_read` FOREIGN KEY (`article_id`) REFERENCES `article` (`article_id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user_read_log
-- ----------------------------
INSERT INTO `user_read_log` VALUES (1, 1, '192.168.48.1', '2020-04-13 22:09:05', NULL);

SET FOREIGN_KEY_CHECKS = 1;
